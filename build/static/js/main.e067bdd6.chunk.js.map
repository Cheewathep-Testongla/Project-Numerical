{"version":3,"sources":["Home.js","reportWebVitals.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","DisplayPleaseLogin","Convert_Latex","eq","react_default","a","createElement","MathJax","dynamic","inline","Math","replace","toTex","parenthesis","implicit","e","toString","Create_Graph","LineChart","width","height","data","state","Array_Answer","margin","top","right","bottom","left","CartesianGrid","stroke","strokeDasharray","XAxis","dataKey","Tooltip","Line","type","dot","ReferenceLine","x","y","Actual_Answer","label","value","fill","Brush","handleChange","event","target","setState","objectSpread","defineProperty","name","toggleSwitch","ManualInput","metA","metB","X","metX","metY","Scope","row","column","Matrix_Answer","GetInputMatrix","CheckEveryInput","GetDataFromManualInput","Chapter","TempMatrixX","TempMatrixY","i","Size","document","getElementById","alert","push","JSON","parse","stringify","Calculation","TempMatrixA","GetMatrixBFromTable","j","console","log","GetMatrixAFromTable","length","splice","GetMatrixXFromTable","TempMatrixX1","TempMatrixX2","TempMatrixX3","met1","met2","met3","handleSubmit","preventDefault","equation","ModeForDiff","FormulaForDiff","h","Convert_Eq","Eq","Var","CheckChapter","id","ProveAnswer","X0","X1","loading","X2","X3","Upper","Lower","ExactAnswer","Error","Order","Cal_Error","Xold","Xnew","ReplaceMatrix","tempA","matA","index","tempB","matB","ForwardElimination","A","B","size","A_Before","A_Now","B_Before","B_Now","TempA","TempB","k","n","l","test1","Answer","total","L","parseFloat","R","YR","count","Final_Answer","Prove_Answer","Criterion","Graph","MathJaxContext","Final_Equation","evaluate","Distance","XKnew","AnsMet","TempAnswer","toFixed","_unused","_this$ForwardEliminat","_this$ForwardEliminat2","slicedToArray","round","multiplier_1","multiplier_2","Answer_Gauss_Elimination","_this$ForwardEliminat3","_this$ForwardEliminat4","Get_Error","Temp_Step_2","Step_1","Step_2","WhenToBreak","Step_3","Step_4","Step_5","Step_6","Step_7","Step_8","_unused2","SumA","SumB","SumAB","SumPowA","_unused3","SumPow2A","SumPow3A","SumPow4A","SumPowAB","_unused4","Sum1","Sum2","Sum3","SumY","SumPow2met1","SumPow2met2","SumPow2met3","Mulmet1met2","Mulmet1met3","Mulmet2met3","getEquationFromAPI","splitValue","split","slice","generateInputMatrixA","Input_Table","className","_unused5","generateMatrixATable","Matrix_Table","generateMatrixBTable","key","_unused6","ShowInputChapter2","Data","HTML","onSubmit","onChange","generateMatrixXTable","generateMatrixYTable","AddDefaultValueToTable","met","ShowInputChapter3","generateMatrixXnTable","ShowInputChapter4","ShowInputChapter5","Input","GetData","HaveToken","DataFromAPI","Bisection","data-testid","parseInt","False_Position","One_Point_Iteration","Newton_Raphson","Secant_Method","Cramer_Rule","metrixA","metrixB","Gauss_Elimination","Gauss_Jordan","LU_Decompost","Jacobi_Iteration","metrixX","Gauss_Seidel_Iteration","Conjugate_Gradient","Lagrange_Interpolation","metrixY","Linear_Regression","Polynomial_Regression","Multiple_Linear_Regression","metrix1","metrix2","metrix3","Single_Trapezoidal_Rule","Composite_Trapezoidal_Rule","Simpson_Rule","Composite_Simpson_Rule","Numerical_Differentiation","CheckLogin","hash","Hash","GetDataFirstTime","onClick","Logout","Account","UserName","GetToken","Token","bcrypt","err","fetch","then","resp","json","GetAccount","email","password","Password","render","Fragment","data-bs-toggle","aria-expanded","aria-labelledby","React","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","react_router_dom","react_router","exact","path","element","src_Home"],"mappings":"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","file":"static/js/main.e067bdd6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"bootstrap/dist/js/bootstrap.min.js\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./CSS/Panel.css\"\r\nimport * as Math from \"mathjs\";\r\nimport bcrypt from 'bcryptjs'\r\nimport {\r\n    LineChart,\r\n    Line,\r\n    CartesianGrid,\r\n    XAxis,\r\n    Tooltip,\r\n    ReferenceLine,\r\n    Brush,\r\n} from \"recharts\";\r\n\r\nimport { MathJax, MathJaxContext } from \"better-react-mathjax\";\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //Token\r\n            Account: (<h4 id=\"Guest User\" className=\"text\" data-testid=\"Guest User\" value=\"Guest User\">Guest User</h4>),\r\n            // PostData: [<button onChange={this.UploadData}>Upload Equation</button>],\r\n            UserName: '',\r\n            Password: '',\r\n            HTML:   (<form className=\"Login\" name=\"Login\" data-testid=\"Submit_Login\" onSubmit={this.GetToken}>\r\n                        <div>Username</div>\r\n                        <input className=\"Input-Login\" id=\"UserName\" type=\"text\" data-testid=\"UserName\" value=\"s620406216049@email.kmutnb.ac.th\" name=\"UserName\" onChange={this.handleChange}></input>\r\n                        <div>Password</div>\r\n                        <input className=\"Input-Login\" id=\"Password\" type=\"password\" data-testid=\"Password\" value=\"55555\" name=\"Password\" onChange={this.handleChange}></input>\r\n                        <br></br>\r\n                        <input type=\"submit\" value=\"Submit\"/>\r\n                    </form>\r\n                    ),\r\n            HaveToken: false,\r\n            //Manual Input\r\n            ManualInput: false,\r\n            // API\r\n            DataFromAPI: [],\r\n            GetDataFirstTime: true,\r\n            // Graph\r\n            Array_Answer: [],\r\n            // Answer\r\n            Matrix_Answer: [],\r\n            Actual_Answer: 0,\r\n            ProveAnswer: [],\r\n            // Chapter 1\r\n            left: 0,\r\n            right: 0,\r\n            X0: 0,\r\n            X1: 0,\r\n            X: 0,\r\n            equation: \"\",\r\n            Chapter: \"\",\r\n            Criterion: 0.000001,\r\n            // Chapter 2\r\n            metA: [],\r\n            metB: [],\r\n            metX: [],\r\n            row: 0,\r\n            column: 0,\r\n            // Chapter 3\r\n            // Used metX from Chapter 2\r\n            metY: [],\r\n            Size: 0,\r\n            Scope: 0,\r\n            // Chapter 4\r\n            // Used X1 from Chapter 1 AND metX from Chapter 2 AND metY, Size from Chapter 3\r\n            met1: [],\r\n            met2: [],\r\n            met3: [],\r\n            X2: 0,\r\n            X3: 0,\r\n            // Chapter 5\r\n            Upper: 0,\r\n            Lower: 0,\r\n            ExactAnswer: 0,\r\n            Error: 0,\r\n            Order: \"\",\r\n            FormulaForDiff: \"\",\r\n            ModeForDiff: \"\",\r\n            h: 0,\r\n        };\r\n    }\r\n    DisplayPleaseLogin = [];\r\n    Convert_Latex = (eq) => {\r\n        try {\r\n            return (\r\n                <MathJax dynamic inline>\r\n                    {\"\\\\(\" +\r\n                        Math.parse(eq.replace(/\\*/g, \"\")).toTex({\r\n                            parenthesis: \"keep\",\r\n                            implicit: \"show\",\r\n                        }) +\r\n                        \"\\\\)\"}\r\n                </MathJax>\r\n            );\r\n        } catch (e) {\r\n            return <MathJax dynamic>{e.toString}</MathJax>;\r\n        }\r\n    };\r\n\r\n    Create_Graph = () => {\r\n        return (\r\n            <LineChart\r\n                width={800}\r\n                height={400}\r\n                data={this.state.Array_Answer}\r\n                margin={{ top: 5, right: 20, bottom: 5, left: 0 }}\r\n            >\r\n                {/* Show Grid */}\r\n                <CartesianGrid stroke=\"black\" strokeDasharray=\"0.1 0.1\" />\r\n                <XAxis dataKey=\"X\" />\r\n                {/* Display Value of each dots */}\r\n                <Tooltip />\r\n                <Line\r\n                    type=\"monotone\"\r\n                    dataKey=\"Graph\"\r\n                    stroke=\"blue\"\r\n                    dot={false}\r\n                />\r\n                <ReferenceLine x={0} stroke=\"red\" />\r\n                <ReferenceLine y={0} stroke=\"red\" />\r\n                <ReferenceLine\r\n                    x={this.state.Actual_Answer}\r\n                    label={{ value: this.state.Actual_Answer, fill: \"red\", top: 50 }}\r\n                    stroke=\"green\"\r\n                />\r\n                {/* <ReferenceLine x={this.state.left.toFixed(2)} stroke=\"blue\" />\r\n                <ReferenceLine x={this.state.right.toFixed(2)} stroke=\"blue\" /> */}\r\n                <Brush fill=\"rgb(255, 100, 0)\" />\r\n            </LineChart>\r\n        );\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        // Get multiple input to\r\n        let value = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: value,\r\n        });\r\n    };\r\n\r\n    toggleSwitch = () => {\r\n        if (this.state.ManualInput) {\r\n            this.setState({\r\n                ManualInput: !this.state.ManualInput,\r\n                metA: [],\r\n                metB: [],\r\n                X: [],\r\n                metX: [],\r\n                metY: [],\r\n                Scope: [],\r\n                row: 0,\r\n                column: 0,\r\n                Matrix_Answer: [],\r\n            });\r\n        } else {\r\n            this.setState({\r\n                ManualInput: !this.state.ManualInput,\r\n                metA: [],\r\n                metB: [],\r\n                X: [],\r\n                metX: [],\r\n                metY: [],\r\n                Scope: [],\r\n                row: 0,\r\n                column: 0,\r\n                Matrix_Answer: [],\r\n            });\r\n        }\r\n    };\r\n\r\n    // If User want to Input Matrix by themself\r\n    GetInputMatrix = false;\r\n    CheckEveryInput = true;\r\n\r\n    GetDataFromManualInput = () => {\r\n        this.CheckEveryInput = true;\r\n        if (this.GetInputMatrix === true) {\r\n            if(this.state.Chapter === \"Lagrange_Interpolation\")\r\n            {\r\n                // Get Data from Input Table\r\n                var TempMatrixX = [];\r\n                var TempMatrixY = [];\r\n                try {\r\n                    for (let i = 0; i < this.state.Size; i++) {\r\n                        if (document.getElementById(\"X\"+i.toString()).value === \"\" || \r\n                            document.getElementById(\"Y\"+i.toString()).value === \"\" ) {\r\n                            this.CheckEveryInput = false;\r\n                            alert(\"Please Enter Every fields!!!\");\r\n                            break;\r\n                        }\r\n                        TempMatrixX.push(\r\n                            JSON.parse(document.getElementById(\"X\"+i.toString()).value\r\n                            )\r\n                        );\r\n                        TempMatrixY.push(\r\n                            JSON.parse(document.getElementById(\"Y\"+i.toString()).value\r\n                            )\r\n                        );\r\n                    }\r\n                    // Fix setstate Delay\r\n                    if(this.state.metX === [])\r\n                    {\r\n                        alert(\"You want to submit your data?\");\r\n                    }\r\n                    else if(this.state.metX !== JSON.stringify(TempMatrixX) || this.state.metY !== JSON.stringify(TempMatrixY))\r\n                    {\r\n                        alert(\"You want to submit your data?\");\r\n                        this.setState({\r\n                            metX: JSON.stringify(TempMatrixX),\r\n                            metY: JSON.stringify(TempMatrixY)\r\n                        });\r\n                        return ;\r\n                    }\r\n                    else if(this.state.metX === JSON.stringify(TempMatrixX) && this.state.metY === JSON.stringify(TempMatrixY))\r\n                    {\r\n                        this.Calculation();\r\n                        return ;\r\n                    }\r\n                } catch(e) {}\r\n            }\r\n            \r\n            else if(this.state.Chapter === \"Cramer_Rule\" || \r\n                this.state.Chapter === \"Gauss_Elimination\" ||\r\n                this.state.Chapter === \"Gauss_Jordan\" ||\r\n                this.state.Chapter === \"LU_Decompost\")\r\n            {\r\n                // Get Data from Input Table\r\n                var TempMatrixA = [];\r\n                var GetMatrixBFromTable = [];\r\n                try {\r\n                    for (let i = 0; i < this.state.row; i++) {\r\n                        for (let j = 0; j < this.state.column; j++) {\r\n                            console.log(document.getElementById(\"B\"+j.toString()).value);\r\n                            if (\r\n                                document.getElementById(i.toString() + j.toString())\r\n                                    .value === \"\" ||\r\n                                document.getElementById(\"B\"+j.toString()).value === \"\"\r\n                            ) {\r\n                                this.CheckEveryInput = false;\r\n                                alert(\"Please Enter Every fields!!!\");\r\n                                break;\r\n                            }\r\n                            TempMatrixA.push(\r\n                                JSON.parse(\r\n                                    document.getElementById(\r\n                                        i.toString() + j.toString()\r\n                                    ).value\r\n                                )\r\n                            );\r\n                        }\r\n                        GetMatrixBFromTable.push(\r\n                            JSON.parse(\r\n                                document.getElementById(\"B\"+i.toString()).value\r\n                            )\r\n                        );\r\n                    }\r\n                    var GetMatrixAFromTable = [];\r\n                    while (TempMatrixA.length)\r\n                        GetMatrixAFromTable.push(\r\n                            TempMatrixA.splice(0, this.state.column)\r\n                        );\r\n                    if(this.state.metA === [])\r\n                    {\r\n                        alert(\"Do you want to submit your data?\");\r\n                    }\r\n                    else if(this.state.metA !== JSON.stringify(GetMatrixAFromTable) || this.state.metB !== JSON.stringify(GetMatrixBFromTable))\r\n                    {\r\n                        alert(\"Do you want to submit your data?\");\r\n                        this.setState({\r\n                            metA: JSON.stringify(GetMatrixAFromTable),\r\n                            metB: JSON.stringify(GetMatrixBFromTable)\r\n                        });\r\n                        return ;\r\n                    }\r\n                    else if(this.state.metA === JSON.stringify(GetMatrixAFromTable) && this.state.metB === JSON.stringify(GetMatrixBFromTable))\r\n                    {\r\n                        this.Calculation();\r\n                        return ;\r\n                    }\r\n                } catch(e) {}\r\n            }\r\n\r\n            else if(this.state.Chapter === \"Jacobi_Iteration\" || \r\n            this.state.Chapter === \"Gauss_Seidel_Iteration\" ||\r\n            this.state.Chapter === \"Conjugate_Gradient\")\r\n            {\r\n            // Get Data from Input Table\r\n            var TempMatrixA = [];\r\n            var GetMatrixBFromTable = [];\r\n            var GetMatrixXFromTable = [];\r\n            try {\r\n                for (let i = 0; i < this.state.row; i++) {\r\n                    for (let j = 0; j < this.state.column; j++) {\r\n                        if (\r\n                            document.getElementById(i.toString() + j.toString()).value === \"\" ||\r\n                            document.getElementById(\"B\"+j.toString()).value === \"\" ||\r\n                            document.getElementById(\"X\"+j.toString()).value === \"\"\r\n                        ) {\r\n                            this.CheckEveryInput = false;\r\n                            alert(\"Please Enter Every fields!!!\");\r\n                            break;\r\n                        }\r\n                        TempMatrixA.push(\r\n                            JSON.parse(\r\n                                document.getElementById(\r\n                                    i.toString() + j.toString()\r\n                                ).value\r\n                            )\r\n                        );\r\n                    }\r\n                    GetMatrixBFromTable.push(\r\n                        JSON.parse(\r\n                            document.getElementById(\"B\"+i.toString()).value\r\n                        )\r\n                    );\r\n                    GetMatrixXFromTable.push(\r\n                        JSON.parse(\r\n                            document.getElementById(\"X\"+i.toString()).value\r\n                        )\r\n                    );\r\n                }\r\n                var GetMatrixAFromTable = [];\r\n                while (TempMatrixA.length)\r\n                    GetMatrixAFromTable.push(\r\n                        TempMatrixA.splice(0, this.state.column)\r\n                    );\r\n                console.log(GetMatrixXFromTable);\r\n                if(this.state.metA === [] || this.state.metB === [] || this.state.metX === [] )\r\n                {\r\n                    alert(\"Do you want to submit your data?\");\r\n                }\r\n                else if(this.state.metA !== JSON.stringify(GetMatrixAFromTable) || \r\n                this.state.metB !== JSON.stringify(GetMatrixBFromTable) || \r\n                this.state.metX !== JSON.stringify(GetMatrixXFromTable))\r\n                {\r\n                    alert(\"Do you want to submit your data?\");\r\n                    this.setState({\r\n                        metA: JSON.stringify(GetMatrixAFromTable),\r\n                        metB: JSON.stringify(GetMatrixBFromTable),\r\n                        metX: JSON.stringify(GetMatrixXFromTable)\r\n                    });\r\n                    return ;\r\n                }\r\n                else if(this.state.metA === JSON.stringify(GetMatrixAFromTable) && \r\n                        this.state.metB === JSON.stringify(GetMatrixBFromTable) && \r\n                        this.state.metX === JSON.stringify(GetMatrixXFromTable))\r\n                {\r\n                    this.Calculation();\r\n                    return ;\r\n                }\r\n            } catch(e) {}\r\n        }\r\n            else if(this.state.Chapter === \"Linear_Regression\" || this.state.Chapter === \"Polynomial_Regression\")\r\n            {\r\n                // Get Data from Input Table\r\n                var TempMatrixX = [];\r\n                var TempMatrixY = [];\r\n                try {\r\n                    for (let i = 0; i < this.state.Size; i++) {\r\n                        if (document.getElementById(\"X\"+i.toString()).value === \"\" || \r\n                            document.getElementById(\"Y\"+i.toString()).value === \"\" ) {\r\n                            this.CheckEveryInput = false;\r\n                            alert(\"Please Enter Every fields!!!\");\r\n                            break;\r\n                        }\r\n                        TempMatrixX.push(\r\n                            JSON.parse(document.getElementById(\"X\"+i.toString()).value\r\n                            )\r\n                        );\r\n                        TempMatrixY.push(\r\n                            JSON.parse(document.getElementById(\"Y\"+i.toString()).value\r\n                            )\r\n                        );\r\n                    }\r\n                    // Fix setstate Delay\r\n                    if(this.state.metX === [])\r\n                    {\r\n                        alert(\"Do you want to submit your data?\");\r\n                    }\r\n                    else if(this.state.metX !== JSON.stringify(TempMatrixX) || this.state.metY !== JSON.stringify(TempMatrixY))\r\n                    {\r\n                        alert(\"Do you want to submit your data?\");\r\n                        this.setState({\r\n                            metX: JSON.stringify(TempMatrixX),\r\n                            metY: JSON.stringify(TempMatrixY)\r\n                        });\r\n                        return ;\r\n                    }\r\n                    else if(this.state.metX === JSON.stringify(TempMatrixX) && this.state.metY === JSON.stringify(TempMatrixY))\r\n                    {\r\n                        this.Calculation();\r\n                        return ;\r\n                    }\r\n                } catch(e) {}\r\n            }\r\n\r\n            else if(this.state.Chapter === \"Multiple_Linear_Regression\")\r\n            {\r\n                // Get Data from Input Table\r\n                var TempMatrixX1 = [];\r\n                var TempMatrixX2 = [];\r\n                var TempMatrixX3 = [];\r\n                var TempMatrixY = [];\r\n                \r\n                // try {\r\n                    for(let i = 1; i < 4; i++)\r\n                    {\r\n                        for (let j = 0; j < this.state.Size; j++) {\r\n                            if (document.getElementById(\"X\"+i.toString()+j.toString()).value === \"\" || \r\n                                document.getElementById(\"Y\"+i.toString()).value === \"\" ) {\r\n                                this.CheckEveryInput = false;\r\n                                alert(\"Please Enter Every fields!!!\");\r\n                                break;\r\n                            }\r\n                            if(i === 1)\r\n                            {\r\n                                TempMatrixX1.push(\r\n                                    JSON.parse(document.getElementById(\"X\"+i.toString()+j.toString()).value\r\n                                    )\r\n                                );\r\n                            }\r\n                            if(i === 2)\r\n                            {\r\n                                TempMatrixX2.push(\r\n                                    JSON.parse(document.getElementById(\"X\"+i.toString()+j.toString()).value\r\n                                    )\r\n                                );\r\n                            }\r\n                            else if(i === 3)\r\n                            {\r\n                                TempMatrixX3.push(\r\n                                    JSON.parse(document.getElementById(\"X\"+i.toString()+j.toString()).value\r\n                                    )\r\n                                );\r\n                            }\r\n                           \r\n                        }\r\n                    }\r\n                    for (let i = 0; i < this.state.Size; i++) {\r\n                        TempMatrixY.push(\r\n                            JSON.parse(document.getElementById(\"Y\"+i.toString()).value\r\n                            )\r\n                        );\r\n                    }\r\n                    // Fix setstate Delay\r\n\r\n                    if(this.state.met1 === [] || this.state.met2 === [] || this.state.met3 === [] || this.state.metY === [])\r\n                    {\r\n                        alert(\"Do you want to submit your data?\");\r\n                    }\r\n                    else if(this.state.met1 !== JSON.stringify(TempMatrixX1) ||\r\n                            this.state.met2 !== JSON.stringify(TempMatrixX2) ||\r\n                            this.state.met3 !== JSON.stringify(TempMatrixX3) || \r\n                            this.state.metY !== JSON.stringify(TempMatrixY))\r\n                    {\r\n                        alert(\"Do you want to submit your data?\");\r\n                        this.setState({\r\n                            met1: JSON.stringify(TempMatrixX1),\r\n                            met2: JSON.stringify(TempMatrixX2),\r\n                            met3: JSON.stringify(TempMatrixX3),\r\n                            metY: JSON.stringify(TempMatrixY)\r\n                        });\r\n                        return ;\r\n                    }\r\n                    else if(this.state.met1 === JSON.stringify(TempMatrixX1) && \r\n                            this.state.met2 === JSON.stringify(TempMatrixX2) &&\r\n                            this.state.met3 === JSON.stringify(TempMatrixX3) &&\r\n                            this.state.metY === JSON.stringify(TempMatrixY))\r\n                    {\r\n                        this.Calculation();\r\n                        return ;\r\n                    }\r\n                // } catch(e) {}\r\n            }\r\n        }\r\n        this.Calculation();  \r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(this.state.equation !== \"\" || this.state.metA !== [] || this.state.metX !== [])\r\n        {\r\n            switch (this.state.Chapter) {\r\n                case \"Bisection\":\r\n                    this.Calculation();\r\n                    break;\r\n    \r\n                case \"False_Position\":\r\n                    this.Calculation();\r\n                    break;\r\n    \r\n                case \"One_Point_Iteration\":\r\n                    this.Calculation();\r\n                    break;\r\n    \r\n                case \"Newton_Raphson\":\r\n                    this.Calculation();\r\n                    break;\r\n    \r\n                case \"Secant_Method\":\r\n                    this.Calculation();\r\n                    break;\r\n    \r\n                case \"Cramer_Rule\":\r\n                    this.GetDataFromManualInput();\r\n                    break;\r\n    \r\n                case \"Gauss_Elimination\":\r\n                    this.GetDataFromManualInput();\r\n                    break;\r\n    \r\n                case \"Gauss_Jordan\":\r\n                    // this.GetDataFromManualInput();\r\n                    break;\r\n    \r\n                case \"LU_Decompost\":\r\n                    // this.GetDataFromManualInput();\r\n                    break;\r\n    \r\n                case \"Jacobi_Iteration\":\r\n                    this.GetDataFromManualInput();\r\n                    break;\r\n    \r\n                case \"Gauss_Seidel_Iteration\":\r\n                    this.GetDataFromManualInput();\r\n                    break;\r\n    \r\n                case \"Conjugate_Gradient\":\r\n                    this.GetDataFromManualInput();\r\n                    break;\r\n    \r\n                case \"Newton's_divided-differences\":\r\n                    this.Calculation();\r\n                    break;\r\n    \r\n                case \"Lagrange_Interpolation\":\r\n                    this.GetDataFromManualInput();\r\n                    break;\r\n    \r\n                case \"Linear_Regression\":\r\n                    this.GetDataFromManualInput();\r\n                    break;\r\n                    \r\n                case \"Polynomial_Regression\":\r\n                    this.GetDataFromManualInput();\r\n                    break;\r\n    \r\n                case \"Multiple_Linear_Regression\":\r\n                    this.GetDataFromManualInput();\r\n                    break;\r\n                \r\n                case \"Single_Trapezoidal_Rule\":\r\n                    this.Calculation();\r\n                    break;  \r\n\r\n                case \"Composite_Trapezoidal_Rule\":\r\n                    this.Calculation();\r\n                    break;   \r\n\r\n                case \"Simpson_Rule\":\r\n                    this.Calculation();\r\n                    break;   \r\n\r\n                case \"Composite_Simpson_Rule\":\r\n                    this.Calculation();\r\n                    break; \r\n                          \r\n                case \"Numerical_Differentiation\":\r\n                    if(this.state.equation === \"\" || this.state.ModeForDiff === \"\" || this.state.FormulaForDiff === \"\" ||\r\n                        this.state.X === 0 || this.state.h === 0)\r\n                    {\r\n                        alert(\"Please Enter every input!!!\");\r\n                    }\r\n                    else\r\n                    {\r\n                        this.Calculation();\r\n                    }\r\n                    break;   \r\n\r\n                default:\r\n                    return <h1>Blank</h1>;\r\n            }\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    Convert_Eq = (Eq, Var) => {\r\n        return Math.evaluate(Eq, { x: Var });\r\n    };\r\n\r\n    CheckChapter = (event) => {\r\n        console.log(event.target.id)\r\n        switch (event.target.id) {\r\n            case \"Bisection\":\r\n                this.setState({\r\n                    left: 0,\r\n                    right: 0,\r\n                    equation: \"\",\r\n                    Chapter: \"Bisection\",\r\n                    Array_Answer: [],\r\n                    Actual_Answer: 0,\r\n                    ProveAnswer: []\r\n                });\r\n                break;\r\n\r\n            case \"False_Position\":\r\n                this.setState({\r\n                    left: 0,\r\n                    right: 0,\r\n                    equation: \"\",\r\n                    Chapter: \"False_Position\",\r\n                    Array_Answer: [],\r\n                    Actual_Answer: 0,\r\n                    ProveAnswer: []\r\n                });\r\n                break;\r\n\r\n            case \"One_Point_Iteration\":\r\n                this.setState({\r\n                    X0: 0,\r\n                    equation: \"\",\r\n                    Chapter: \"One_Point_Iteration\",\r\n                    Array_Answer: [],\r\n                    Actual_Answer: 0,\r\n                    ProveAnswer: []\r\n                });\r\n                break;\r\n\r\n            case \"Newton_Raphson\":\r\n                this.setState({\r\n                    X0: 0,\r\n                    equation: \"\",\r\n                    Chapter: \"Newton_Raphson\",\r\n                    Array_Answer: [],\r\n                    Actual_Answer: 0,\r\n                    ProveAnswer: []\r\n                });\r\n                break;\r\n\r\n            case \"Secant_Method\":\r\n                this.setState({\r\n                    X0: 0,\r\n                    X1: 0,\r\n                    equation: \"\",\r\n                    Chapter: \"Secant_Method\",\r\n                    Array_Answer: [],\r\n                    Actual_Answer: 0,\r\n                    ProveAnswer: []\r\n                });\r\n                break;\r\n\r\n            case \"Cramer_Rule\":\r\n                this.setState({\r\n                    Chapter: \"Cramer_Rule\",\r\n                    metA: [],\r\n                    metB: [],\r\n                    X: [],\r\n                    row: 0,\r\n                    column: 0,\r\n                    Matrix_Answer: [],\r\n                    ProveAnswer: []\r\n                });\r\n                break;\r\n\r\n            case \"Gauss_Elimination\":\r\n                this.setState({\r\n                    Chapter: \"Gauss_Elimination\",\r\n                    metA: [],\r\n                    metB: [],\r\n                    row: 0,\r\n                    column: 0,\r\n                    Matrix_Answer: [],\r\n                    ProveAnswer: []\r\n                });\r\n                break;\r\n\r\n            case \"Gauss_Jordan\":\r\n                this.setState({\r\n                    Chapter: \"Gauss_Jordan\",\r\n                    metA: [],\r\n                    metB: [],\r\n                    row: 0,\r\n                    column: 0,\r\n                    Matrix_Answer: [],\r\n                    ProveAnswer: []\r\n                });\r\n                break;\r\n\r\n            case \"LU_Decompost\":\r\n                this.setState({\r\n                    Chapter: \"LU_Decompost\",\r\n                    metA: [],\r\n                    metB: [],\r\n                    row: 0,\r\n                    column: 0,\r\n                    Matrix_Answer: [],\r\n                    ProveAnswer: []\r\n                });\r\n                break;\r\n\r\n            case \"Jacobi_Iteration\":\r\n                this.setState({\r\n                    Chapter: \"Jacobi_Iteration\",\r\n                    metA: [],\r\n                    metB: [],\r\n                    metX: [],\r\n                    row: 0,\r\n                    column: 0,\r\n                    Matrix_Answer: [],\r\n                    ProveAnswer: []\r\n                });\r\n                break;\r\n\r\n            case \"Gauss_Seidel_Iteration\":\r\n                this.setState({\r\n                    Chapter: \"Gauss_Seidel_Iteration\",\r\n                    metA: [],\r\n                    metB: [],\r\n                    metX: [],\r\n                    row: 0,\r\n                    column: 0,\r\n                    Matrix_Answer: [],\r\n                    ProveAnswer: []\r\n                });\r\n                break;\r\n\r\n            case \"Conjugate_Gradient\":\r\n                this.setState({\r\n                    Chapter: \"Conjugate_Gradient\",\r\n                    metA: [],\r\n                    metB: [],\r\n                    metX: [],\r\n                    row: 0,\r\n                    column: 0,\r\n                    loading: true,\r\n                    Matrix_Answer: [],\r\n                    ProveAnswer: []\r\n                });\r\n                break;\r\n\r\n            case \"Newton's_divided-differences\":\r\n                this.setState({\r\n                    Chapter: \"Newton's_divided-differences\",\r\n                    metA: [],\r\n                    metX: [],\r\n                    metB: [],\r\n                    X: 0,\r\n                    Actual_Answer: 0,\r\n                    Matrix_Answer: [],\r\n                    ProveAnswer: []\r\n                });\r\n                break;\r\n\r\n            case \"Lagrange_Interpolation\":\r\n                this.setState({\r\n                    Chapter: \"Lagrange_Interpolation\",\r\n                    metX: [],\r\n                    metY: [],\r\n                    Scope: [],\r\n                    X: 0,\r\n                    Actual_Answer: 0,\r\n                    Matrix_Answer: [],\r\n                    ProveAnswer: []\r\n                });\r\n                break;\r\n\r\n            case \"Linear_Regression\":\r\n                this.setState({\r\n                    Chapter: \"Linear_Regression\",\r\n                    metX: [],\r\n                    metY: [],\r\n                    X: 0,\r\n                    equation: \"a0+(a1*x)\",\r\n                    Matrix_Answer: [],\r\n                    ProveAnswer: []\r\n                });\r\n                break;\r\n\r\n            case \"Polynomial_Regression\":\r\n                this.setState({\r\n                    Chapter: \"Polynomial_Regression\",\r\n                    metX: [],\r\n                    metY: [],\r\n                    X: 0,\r\n                    equation: \"a0+(a1*x)+(a2*(x^2))\",\r\n                    Matrix_Answer: [],\r\n                    ProveAnswer: []\r\n                });\r\n                break;\r\n\r\n            case \"Multiple_Linear_Regression\":\r\n                this.setState({\r\n                    Chapter: \"Multiple_Linear_Regression\",\r\n                    met1: [],\r\n                    met2: [],\r\n                    met3: [],\r\n                    metY: [],\r\n                    X1: 0,\r\n                    X2: 0,\r\n                    X3: 0,\r\n                    equation: \"a0+(a1*x1)+(a2*x2)+(a3*x3))\",\r\n                    Matrix_Answer: [],\r\n                    ProveAnswer: []\r\n                });\r\n                break;\r\n\r\n            case \"Single_Trapezoidal_Rule\":\r\n                this.setState({\r\n                    Chapter: \"Single_Trapezoidal_Rule\",\r\n                    equation: \"\",\r\n                    Upper: 0,\r\n                    Lower: 0,\r\n                    ExactAnswer: 0,\r\n                    Actual_Answer: 0,\r\n                    Error: 0,\r\n                    ProveAnswer: []\r\n                })\r\n                break;\r\n\r\n            case \"Composite_Trapezoidal_Rule\":\r\n                this.setState({\r\n                    Chapter: \"Composite_Trapezoidal_Rule\",\r\n                    equation: \"\",\r\n                    Scope: [],\r\n                    Upper: 0,\r\n                    Lower: 0,\r\n                    ExactAnswer: 0,\r\n                    Actual_Answer: 0,\r\n                    Error: 0,\r\n                    ProveAnswer: []\r\n                })\r\n                break;\r\n\r\n            case \"Simpson_Rule\":\r\n                this.setState({\r\n                    Chapter: \"Simpson_Rule\",\r\n                    equation: \"\",\r\n                    Upper: 0,\r\n                    Lower: 0,\r\n                    ExactAnswer: 0,\r\n                    Actual_Answer: 0,\r\n                    Error: 0,\r\n                    ProveAnswer: []\r\n                })\r\n                break;\r\n\r\n            case \"Composite_Simpson_Rule\":\r\n                this.setState({\r\n                    Chapter: \"Composite_Simpson_Rule\",\r\n                    equation: \"\",\r\n                    Scope: [],\r\n                    Upper: 0,\r\n                    Lower: 0,\r\n                    ExactAnswer: 0,\r\n                    Actual_Answer: 0,\r\n                    Error: 0,\r\n                    ProveAnswer: []\r\n                })\r\n                break;\r\n            \r\n            case \"Numerical_Differentiation\":\r\n                this.setState({\r\n                    Chapter: \"Numerical_Differentiation\",\r\n                    equation: \"\",\r\n                    X: 0,\r\n                    h: 0,\r\n                    Order: \"\",\r\n                    ModeForDiff: \"\",\r\n                    FormulaForDiff: \"\",\r\n                    ExactAnswer: 0,\r\n                    Error: 0\r\n                })\r\n                break;\r\n\r\n            default:\r\n                console.log(\"default\");\r\n        }\r\n    };\r\n\r\n    //*** Part Calculation ***//\r\n    Cal_Error = (Xold, Xnew) => {\r\n        return Math.abs((Xnew - Xold) / Xnew);\r\n    };\r\n\r\n    ReplaceMatrix = (tempA, matA, index, tempB, matB) => {\r\n        for (let i = 0; i < tempA.length; i++) {\r\n            matA[index][i] = tempA[i];\r\n        }\r\n        matB[index] = tempB[index];\r\n    };\r\n\r\n    ForwardElimination = (A, B, size) => {\r\n        var A_Before = [];\r\n        var A_Now = [];\r\n        var B_Before = [];\r\n        var B_Now = [];\r\n\r\n        // New row of Matrix A & B after calculation\r\n        var TempA = [];\r\n        var TempB = [];\r\n\r\n        for (let i = 0; i < size; i++) {\r\n            if (i === 1) {\r\n                for (let j = 0; j < size; j++) {\r\n                    // A = JSON.parse(this.state.metA);\r\n                    // B = JSON.parse(this.state.metB);\r\n                    A_Before.push(A[i - 1][j] * A[i][i - 1]);\r\n                    B_Before.push(B[0] * A[1][0]);\r\n\r\n                    // A = JSON.parse(this.state.metA);\r\n                    // B = JSON.parse(this.state.metB);\r\n                    A_Now.push(A[i][j] * A[i - 1][i - 1]);\r\n                    B_Now.push(B[1] * A[0][0]);\r\n\r\n                    TempA.push(A_Now[j] - A_Before[j]);\r\n                    TempB.push(B_Now[j] - B_Before[j]);\r\n\r\n                    if (j === size - 1) {\r\n                        this.ReplaceMatrix(TempA, A, i, TempB, B);\r\n                    }\r\n                }\r\n            }\r\n            if (i > 1) {\r\n                var index = 0;\r\n                for (let k = 0; k < i; k++) {\r\n                    var n = 0;\r\n                    A_Before = [];\r\n                    A_Now = [];\r\n                    B_Before = [];\r\n                    B_Now = [];\r\n                    TempA = [];\r\n                    TempB = [];\r\n                    for (let l = 0; l < size; l++) {\r\n                        A_Before.push(A[index][l] * A[i][index]);\r\n                        B_Before.push(B[index] * A[i][index]);\r\n\r\n                        A_Now.push(A[i][l] * A[index][index]);\r\n                        B_Now.push(B[i] * A[index][index]);\r\n\r\n                        TempA.push(A_Now[n] - A_Before[n]);\r\n                        TempB.push(B_Now[n] - B_Before[n]);\r\n\r\n                        if (l === size - 1) {\r\n                            this.ReplaceMatrix(TempA, A, i, TempB, B);\r\n                        }\r\n                        n++;\r\n                    }\r\n                    index++;\r\n                }\r\n            }\r\n        }\r\n        return [A, B];\r\n    };\r\n\r\n    test1 = [];\r\n\r\n    // Get Final Answer from function Answer //\r\n    Answer = 0;\r\n\r\n    Calculation = () => {\r\n        var total = 10;\r\n        var L = parseFloat(this.state.left);\r\n        var R = parseFloat(this.state.right);\r\n        var YR = 0;\r\n        var YM = 0;\r\n        var X = [];\r\n        var Xnew = [];\r\n        var count = 0;\r\n        var Final_Answer = [];\r\n        var Prove_Answer = \"\";\r\n        this.Answer = 0;\r\n\r\n        // var Answer_Show_Table = [];\r\n        switch (this.state.Chapter) {\r\n            case \"Bisection\":\r\n                try {\r\n                    this.Answer = (L + R) / 2;\r\n                    YR = this.Convert_Eq(this.state.equation, R);\r\n                    YM = this.Convert_Eq(this.state.equation, this.Answer);\r\n    \r\n                    while (total > this.state.Criterion) {\r\n                        this.Answer = (L + R) / 2;\r\n                        YR = this.Convert_Eq(this.state.equation, R);\r\n                        YM = this.Convert_Eq(this.state.equation, this.Answer);\r\n                        if (YM * YR < 0) {\r\n                            total = this.Cal_Error(this.Answer, L);\r\n                            L = this.Answer;\r\n                        } else {\r\n                            total = this.Cal_Error(this.Answer, R);\r\n                            R = this.Answer;\r\n                        }\r\n                    }\r\n                    // Push Boundary & Answer of Equation\r\n                    for (let i = -20; i <= 20; i++) {\r\n                        if (this.Answer > i - 1 && this.Answer < i) {\r\n                            // Final_Answer.push({\r\n                            //     Graph: this.Convert_Eq(this.state.equation, this.state.left),\r\n                            //     X: this.state.left,\r\n                            // });\r\n                            Final_Answer.push({\r\n                                Graph: this.Convert_Eq(\r\n                                    this.state.equation,\r\n                                    this.Answer\r\n                                ),\r\n                                X: this.Answer,\r\n                            });\r\n                            // Final_Answer.push({\r\n                            //     Graph: this.Convert_Eq(this.state.equation, this.state.right),\r\n                            //     X: this.state.right,\r\n                            // });\r\n                        }\r\n                        Final_Answer.push({\r\n                            Graph: this.Convert_Eq(this.state.equation, i),\r\n                            X: i,\r\n                        });\r\n                    }\r\n                    this.setState({\r\n                        ProveAnswer: (\r\n                            <div>\r\n                                <MathJaxContext>\r\n                                    <MathJax dynamic>\r\n                                        <h3>Prove Answer</h3>\r\n                                        <h4>\r\n                                            Equation: {this.Convert_Latex(this.state.equation)}\r\n                                        </h4>\r\n                                        <h4>Replace x with {this.Convert_Latex(this.Answer)}</h4>\r\n                                        <h4>\r\n                                            {this.state.equation.replace(/x/g,this.Answer)+\"=\"\r\n                                            +this.Convert_Eq(this.state.equation, this.Answer)}\r\n                                        </h4>\r\n                                    </MathJax>\r\n                                </MathJaxContext>\r\n                            </div>\r\n                            ),\r\n                        Array_Answer: Final_Answer,\r\n                        Actual_Answer: this.Answer\r\n                    });\r\n                }\r\n                catch(e) {}\r\n                break;\r\n\r\n            case \"False_Position\":\r\n                try{\r\n                    while (total > this.state.Criterion) {\r\n                        this.Answer =\r\n                            (L * this.Convert_Eq(this.state.equation, R) -\r\n                                R * this.Convert_Eq(this.state.equation, L)) /\r\n                            (this.Convert_Eq(this.state.equation, R) -\r\n                                this.Convert_Eq(this.state.equation, L));\r\n                        YR = this.Convert_Eq(this.state.equation, R);\r\n                        var YX = this.Convert_Eq(this.state.equation, this.Answer);\r\n    \r\n                        if (YX * YR < 0) {\r\n                            total = this.Cal_Error(L, this.Answer);\r\n                            L = this.Answer;\r\n                        } else {\r\n                            total = this.Cal_Error(R, this.Answer);\r\n                            R = this.Answer;\r\n                        }\r\n                        count++;\r\n                    }\r\n                    for (let i = -150; i <= 150; i++) {\r\n                        if (this.Answer > i - 1 && this.Answer < i) {\r\n                            Final_Answer.push({\r\n                                Graph: this.Convert_Eq(\r\n                                    this.state.equation,\r\n                                    this.Answer\r\n                                ),\r\n                                X: this.Answer,\r\n                            });\r\n                        }\r\n                        Final_Answer.push({\r\n                            Graph: this.Convert_Eq(this.state.equation, i),\r\n                            // Y: i,\r\n                            X: i,\r\n                        });\r\n                    }   \r\n                    this.setState({\r\n                        ProveAnswer: (\r\n                            <div>\r\n                                <MathJaxContext>\r\n                                    <MathJax dynamic>\r\n                                        <h3>Prove Answer</h3>\r\n                                        <h4>\r\n                                            Equation: {this.Convert_Latex(this.state.equation)}\r\n                                        </h4>\r\n                                        <h4>Replace x with {this.Convert_Latex(this.Answer)}</h4>\r\n                                        <h4>\r\n                                            {this.state.equation.replace(/x/g,this.Answer)+\"=\"\r\n                                            +this.Convert_Eq(this.state.equation, this.Answer)}\r\n                                        </h4>\r\n                                    </MathJax>\r\n                                </MathJaxContext>\r\n                            </div>\r\n                            ),\r\n                        Array_Answer: Final_Answer,\r\n                        Actual_Answer: this.Answer,\r\n                    });\r\n                }\r\n                catch(e) {};\r\n                break;\r\n\r\n            case \"One_Point_Iteration\":\r\n                try\r\n                {\r\n                    var Xold = JSON.parse(this.state.X0);\r\n                    Xnew = 0;\r\n                    while (total > this.state.Criterion) {\r\n                        Xnew = this.Convert_Eq(this.state.equation, Xold);\r\n                        if (this.Cal_Error(Xold, Xnew) > this.state.Criterion) {\r\n                            total = this.Cal_Error(Xnew, Xold);\r\n                            console.log(Xnew);\r\n                            Xold = Xnew;\r\n                        } else {\r\n                            for (let i = -150; i <= 150; i++) {\r\n                                if (Xnew > i - 1 && Xnew < i) {\r\n                                    Final_Answer.push({\r\n                                        Graph: this.Convert_Eq(\r\n                                            this.state.equation,\r\n                                            Xnew\r\n                                        ),\r\n                                        X: Xnew,\r\n                                    });\r\n                                }\r\n                                Final_Answer.push({\r\n                                    Graph: this.Convert_Eq(this.state.equation, i),\r\n                                    X: i,\r\n                                });\r\n                            }\r\n                           \r\n                            break;\r\n                        }\r\n                    }\r\n                    var Final_Equation = this.state.equation+(\"-x\");\r\n                    this.setState({\r\n                        ProveAnswer: (\r\n                            <div>\r\n                                <MathJaxContext>\r\n                                    <MathJax dynamic>\r\n                                        <h3>Prove Answer</h3>\r\n                                        <h4>\r\n                                            Equation: {this.Convert_Latex(Final_Equation)}\r\n                                        </h4>\r\n                                        <h4>Replace x with {this.Convert_Latex(Xnew)}</h4>\r\n                                        <h4>\r\n                                            {Final_Equation.replace(/x/g,Xnew)+\"=\"\r\n                                            +this.Convert_Eq(Final_Equation, Xnew)}\r\n                                        </h4>\r\n                                    </MathJax>\r\n                                </MathJaxContext>\r\n                            </div>\r\n                            ),\r\n                        Array_Answer: Final_Answer,\r\n                        Actual_Answer: Xnew,\r\n                    });\r\n                }\r\n                catch(e) {}\r\n                break;\r\n\r\n            case \"Newton_Raphson\":\r\n                try {\r\n                    Xold = JSON.parse(this.state.X0);\r\n                    while (total > this.state.Criterion) {\r\n                        let deltaX =\r\n                            -1 *\r\n                            (this.Convert_Eq(this.state.equation, Xold) /\r\n                                Math.derivative(this.state.equation, \"x\").evaluate({\r\n                                    x: Xold,\r\n                                }));\r\n    \r\n                        let Xnew = Xold + deltaX;\r\n    \r\n                        if (this.Cal_Error(Xnew, Xold) > this.state.Criterion) {\r\n                            total = this.Cal_Error(Xnew, Xold);\r\n                            Xold = Xnew;\r\n                        } else {\r\n                            break;\r\n                        }\r\n                        this.Answer = Xnew;\r\n                    }\r\n    \r\n                    for (let i = -150; i <= 150; i++) {\r\n                        if (this.Answer > i - 1 && this.Answer < i) {\r\n                            Final_Answer.push({\r\n                                Graph: this.Convert_Eq(\r\n                                    this.state.equation,\r\n                                    this.Answer\r\n                                ),\r\n                                X: this.Answer,\r\n                            });\r\n                        }\r\n                        Final_Answer.push({\r\n                            Graph: this.Convert_Eq(this.state.equation, i),\r\n                            // Y: i,\r\n                            X: i,\r\n                        });\r\n                    }\r\n    \r\n                    this.setState({\r\n                        ProveAnswer: (\r\n                            <div>\r\n                                <MathJaxContext>\r\n                                    <MathJax dynamic>\r\n                                        <h3>Prove Answer</h3>\r\n                                        <h4>\r\n                                            Equation: {this.Convert_Latex(this.state.equation)}\r\n                                        </h4>\r\n                                        <h4>Replace x with {this.Convert_Latex(this.Answer)}</h4>\r\n                                        <h4>\r\n                                            {this.state.equation.replace(/x/g,this.Answer)+\"=\"\r\n                                            +this.Convert_Eq(this.state.equation, this.Answer)}\r\n                                        </h4>\r\n                                    </MathJax>\r\n                                </MathJaxContext>\r\n                            </div>\r\n                            ),\r\n                        Array_Answer: Final_Answer,\r\n                        Actual_Answer: this.Answer\r\n                    });\r\n                }\r\n                catch(e) {}\r\n                break;\r\n\r\n            case \"Secant_Method\":\r\n                var X0 = parseFloat(this.state.X0);\r\n                var X1 = parseFloat(this.state.X1);\r\n                var Distance = X1 - X0;\r\n\r\n                while (total > this.state.Criterion) {\r\n                    var XKnew =\r\n                        X0 -\r\n                        (this.Convert_Eq(this.state.equation, X0) * (X0 - X1)) /\r\n                            (this.Convert_Eq(this.state.equation, X0) -\r\n                                this.Convert_Eq(this.state.equation, X1));\r\n                    total = this.Cal_Error(X0, XKnew);\r\n                    X0 = XKnew;\r\n                    X1 = XKnew + Distance;\r\n                }\r\n\r\n                this.Answer = XKnew;\r\n\r\n                for (let i = -150; i <= 150; i++) {\r\n                    Final_Answer.push({\r\n                        Graph: this.Convert_Eq(this.state.equation, i),\r\n                        // Y: i,\r\n                        X: i,\r\n                    });\r\n                }\r\n\r\n                this.setState({\r\n                    Array_Answer: Final_Answer,\r\n                    Actual_Answer: this.Answer,\r\n                });\r\n\r\n                break;\r\n\r\n            case \"Cramer_Rule\":\r\n                try {\r\n                    X = JSON.parse(this.state.metA);\r\n                    Xnew = JSON.parse(this.state.metA);\r\n                    var AnsMet = JSON.parse(this.state.metB);\r\n                    var TempAnswer = 0;\r\n                    while (count < AnsMet.length) {\r\n                        Xnew = JSON.parse(this.state.metA);\r\n                        AnsMet = JSON.parse(this.state.metB);\r\n                        for (let i = 0; i < X.length; i++) {\r\n                            Xnew[i][count] = AnsMet[i];\r\n                        }\r\n                        TempAnswer = (Math.det(Xnew) / Math.det(X)).toFixed(0);\r\n                        Final_Answer.push(\r\n                            <p id={TempAnswer} value={TempAnswer}>\r\n                                X{count} : {TempAnswer}\r\n                            </p>\r\n                        );\r\n                        count++;\r\n                        this.test1.push(TempAnswer);\r\n                    }\r\n                    for (let i = 0; i < AnsMet.length; i++) {\r\n                        var a = 0;\r\n                        for (let j = 0; j < AnsMet.length; j++) {\r\n                            a += X[i][j] * this.test1[j];\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        Matrix_Answer: Final_Answer,\r\n                    });\r\n                } catch {}\r\n                break;\r\n\r\n            case \"Gauss_Elimination\":\r\n                try {\r\n                    // Initial Matrix A & B\r\n                    var A = JSON.parse(this.state.metA);\r\n                    var B = JSON.parse(this.state.metB);\r\n                    console.log(A);\r\n                    //Initial length of For\r\n                    var size = A.length;\r\n\r\n                    // Called function Forward Elimination\r\n                    [A, B] = this.ForwardElimination(A, B, size);\r\n                    // get divisor for each round when finding X\r\n                    var round = 0;\r\n\r\n                    // set multiplier 1 & 2 to used when finding X\r\n                    var multiplier_1 = 0;\r\n                    var multiplier_2 = 0;\r\n\r\n                    // Initila Answer (X)\r\n                    Final_Answer = JSON.parse(this.state.metB);\r\n\r\n                    // Array which used to push HTML then setstate to Matrix_Answer\r\n                    var Answer_Gauss_Elimination = [];\r\n\r\n                    var index = size - 1;\r\n\r\n                    // Backward Substitution\r\n                    for (let i = size - 1; i >= 0; i--) {\r\n                        multiplier_1 = 0;\r\n                        multiplier_2 = 0;\r\n                        round = B[i];\r\n                        for (let j = 0; j < size; j++) {\r\n                            if (i === j) {\r\n                                multiplier_1 += A[i][j];\r\n                            } else {\r\n                                multiplier_2 += Final_Answer[j] * A[i][j];\r\n                            }\r\n                            // console.log(multiplier_1, multiplier_2);\r\n                            if (j === size - 1) {\r\n                                round -= multiplier_2;\r\n                                round /= multiplier_1;\r\n                                Final_Answer[index] = round;\r\n\r\n                                Answer_Gauss_Elimination.push(\r\n                                    <p id={round} value={round}>\r\n                                        X{index} : {round}\r\n                                    </p>\r\n                                );\r\n                            }\r\n                        }\r\n                        index--;\r\n                    }\r\n\r\n                    this.setState({\r\n                        Matrix_Answer: Answer_Gauss_Elimination,\r\n                    });\r\n                }\r\n                catch(e) {}\r\n                break;\r\n\r\n            case \"Gauss_Jordan\":\r\n                try\r\n                {\r\n                    A = JSON.parse(this.state.metA);\r\n                    B = JSON.parse(this.state.metB);\r\n    \r\n                    //Initial length of For\r\n                    size = A.length;\r\n    \r\n                    // Called function Forward Elimination\r\n                    [A, B] = this.ForwardElimination(A, B, size);\r\n    \r\n                    // console.log(A, B);\r\n                    var Final_AnswerA = A;\r\n                    var Final_AnswerB = B;\r\n    \r\n                    // console.log(this.state.D);\r\n                    multiplier_1 = [];\r\n                    multiplier_2 = [];\r\n    \r\n                    var a = A;\r\n                    var b = B;\r\n                    index = size - 1;\r\n    \r\n                    //Further Reduction\r\n                    // for (let i = size - 1; i >= 0; i--) {\r\n                    //     round = B[i];\r\n                    //     var tb = 0;\r\n                    //     for (let j = size - 1; j >= 0; j--) {\r\n                    //         if (i === j) {\r\n                    //             // Final_AnswerA[index][j] = A[i][j] / A[i][j];\r\n                    //             Final_AnswerB[index] = B[j] / A[i][j];\r\n    \r\n                    //             // a[i-1][j] = a[i][j]*a[i-1][j];\r\n                    //             b[index] = b[i]*a[i-1][j];\r\n                    //             tb = b;\r\n                    //         }\r\n                    //         else{\r\n                    //             // Final_AnswerA[index][j] = Final_AnswerA[i][j] - a[i][j];\r\n                    //             Final_AnswerB[i] = Final_AnswerB[index] - tb[j];\r\n                    //             // console.log(Final_AnswerB);\r\n                    //             // console.log(Final_AnswerA);\r\n                    //         }\r\n    \r\n                    //         console.log(Final_AnswerB);\r\n                    //         // console.log(A);\r\n                    //     }\r\n                    //     index--;\r\n                    // }\r\n                }\r\n                catch(e) {};\r\n                break;\r\n\r\n            case \"LU_Decompost\":\r\n                try\r\n                {\r\n\r\n                }\r\n                catch(e) {};\r\n                break;\r\n\r\n            case \"Jacobi_Iteration\":\r\n                try\r\n                {\r\n                    var A = JSON.parse(this.state.metA);\r\n                    var B = JSON.parse(this.state.metB);\r\n    \r\n                    // Initial X to be 0\r\n                    var X = JSON.parse(this.state.metB);\r\n                    var Get_Error = JSON.parse(this.state.metB);\r\n                    var Temp_Step_2 = JSON.parse(this.state.metB);\r\n    \r\n                    for (let i = 0; i < B.length; i++) {\r\n                        X[i] = 0;\r\n                        Get_Error[i] = 0;\r\n                        Temp_Step_2[i] = 0;\r\n                    }\r\n    \r\n                    size = X.length;\r\n    \r\n                    var Step_1 = 0;\r\n                    var Step_2 = 0;\r\n    \r\n                    var WhenToBreak = 0;\r\n                    while (true) {\r\n                        Temp_Step_2 = Math.zeros(B.length);\r\n                        WhenToBreak = 0;\r\n                        for (let i = 0; i < size; i++) {\r\n                            Step_2 = 0;\r\n                            for (let j = 0; j < size; j++) {\r\n                                if (i !== j) {\r\n                                    Step_1 += A[i][j] * X[j];\r\n                                }\r\n                            }\r\n                            Step_2 = (B[i] - Step_1) / A[i][i];\r\n                            Temp_Step_2[i] = Step_2;\r\n    \r\n                            Step_1 = 0;\r\n    \r\n                            Get_Error[i] = this.Cal_Error(X[i], Step_2);\r\n                            if (Get_Error[i] > this.state.Criterion) {\r\n                                WhenToBreak++;\r\n                            }\r\n                        }\r\n                        X = Temp_Step_2;\r\n    \r\n                        if (WhenToBreak === 0) {\r\n                            for (let i = 0; i < size; i++) {\r\n                                Final_Answer.push(\r\n                                    <h1>\r\n                                        X{i} : {X[i]}\r\n                                    </h1>\r\n                                );\r\n                            }\r\n                            break;\r\n                        }\r\n                        this.setState({\r\n                            Matrix_Answer: Final_Answer,\r\n                        });\r\n                    }\r\n                }\r\n                catch(e) {};\r\n                break;\r\n\r\n            case \"Gauss_Seidel_Iteration\":\r\n                try\r\n                {\r\n                    var A = JSON.parse(this.state.metA);\r\n                    var B = JSON.parse(this.state.metB);\r\n    \r\n                    var X = JSON.parse(this.state.metB);\r\n                    var Get_Error = JSON.parse(this.state.metB);\r\n                    // Initial X to be 0\r\n    \r\n                    for (let i = 0; i < B.length; i++) {\r\n                        X[i] = 0;\r\n                        Get_Error[i] = 0;\r\n                    }\r\n    \r\n                    size = X.length;\r\n    \r\n                    var Step_1 = 0;\r\n                    var Step_2 = 0;\r\n    \r\n                    var WhenToBreak = 0;\r\n                    while (true) {\r\n                        WhenToBreak = 0;\r\n                        for (let i = 0; i < size; i++) {\r\n                            Step_2 = 0;\r\n                            for (let j = 0; j < size; j++) {\r\n                                if (i !== j) {\r\n                                    Step_1 += A[i][j] * X[j];\r\n                                }\r\n                            }\r\n                            Step_2 = (B[i] - Step_1) / A[i][i];\r\n                            // Temp_Step_2[i] = Step_2;\r\n    \r\n                            Step_1 = 0;\r\n    \r\n                            Get_Error[i] = this.Cal_Error(X[i], Step_2);\r\n                            X[i] = Step_2;\r\n                            if (Get_Error[i] > this.state.Criterion) {\r\n                                WhenToBreak++;\r\n                            }\r\n                        }\r\n                        if (WhenToBreak === 0) {\r\n                            for (let i = 0; i < size; i++) {\r\n                                Final_Answer.push(\r\n                                    <h1>\r\n                                        X{i} : {X[i]}\r\n                                    </h1>\r\n                                );\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        Matrix_Answer: Final_Answer,\r\n                    });\r\n                }\r\n                catch(e) {};\r\n                break;\r\n\r\n            case \"Conjugate_Gradient\":\r\n                try\r\n                {\r\n                    var A = JSON.parse(this.state.metA);\r\n                    var B = JSON.parse(this.state.metB);\r\n                    var X = JSON.parse(this.state.metX);\r\n                    // console.log(A,B,X)\r\n    \r\n                    var size = B.length;\r\n    \r\n                    // Step_1 : R\r\n                    var Step_1 = [];\r\n                    // Step_2 : D\r\n                    var Step_2 = [];\r\n                    // Step_3 : Lambda\r\n                    var Step_3 = 0;\r\n                    // Step_4 : Xnew\r\n                    var Step_4 = [];\r\n                    // Step_5 : Rnew\r\n                    var Step_5 = [];\r\n                    // Total : Error\r\n                    var Step_6 = total;\r\n                    // Step_7 : alpha\r\n                    var Step_7 = 0;\r\n                    // Step_8 : Dnew\r\n                    var Step_8 = [];\r\n    \r\n                    while (Step_6 > this.state.Criterion) {\r\n                        if (Step_6 === total) {\r\n                            Step_1 = Math.subtract(Math.multiply(X, A), B);\r\n                            Step_2 = Math.multiply(Step_1, -1);\r\n                        }\r\n                        Step_3 = Math.multiply(\r\n                            Math.multiply(Step_1, Math.transpose(Step_2)) /\r\n                                Math.multiply(\r\n                                    Math.multiply(Math.transpose(Step_2), A),\r\n                                    Step_2\r\n                                ),\r\n                            -1\r\n                        );\r\n                        Step_4 = Math.add(Math.multiply(Step_3, Step_2), X);\r\n                        Step_5 = Math.subtract(Math.multiply(A, Step_4), B);\r\n                        Step_6 = Math.sqrt(\r\n                            Math.multiply(Math.transpose(Step_5), Step_5)\r\n                        );\r\n                        Step_7 =\r\n                            Math.multiply(\r\n                                Math.multiply(Math.transpose(Step_5), A),\r\n                                Step_2\r\n                            ) /\r\n                            Math.multiply(\r\n                                Math.multiply(Math.transpose(Step_2), A),\r\n                                Step_2\r\n                            );\r\n                        Step_8 = Math.add(\r\n                            Math.multiply(Step_5, -1),\r\n                            Math.multiply(Step_7, Step_2)\r\n                        );\r\n                        Step_1 = Step_5;\r\n                        Step_2 = Step_8;\r\n                        X = Step_4;\r\n                    }\r\n    \r\n                    X = Step_4;\r\n    \r\n                    for (let i = 0; i < B.length; i++) {\r\n                        Final_Answer.push(\r\n                            <h1>\r\n                                X{i} : {X[i]}\r\n                            </h1>\r\n                        );\r\n                    }\r\n    \r\n                    this.setState({\r\n                        Matrix_Answer: Final_Answer,\r\n                    });\r\n    \r\n                }\r\n                catch(e) {};\r\n                break;\r\n\r\n            case \"Newton's_divided-differences\":\r\n                var X = JSON.parse(this.state.metX);\r\n\r\n                // this.Recursive(X.length - 1, X.length - 2);\r\n                // console.log(this.Recursive(X.length - 1, X.length - 2));\r\n                break;\r\n\r\n            case \"Lagrange_Interpolation\":\r\n                // console.log(this.state.metX);\r\n                try{\r\n                    var metX = JSON.parse(this.state.metX);\r\n                    var metY = JSON.parse(this.state.metY);\r\n                    var Scope = JSON.parse(this.state.Scope);\r\n                    var X = parseFloat(this.state.X);\r\n                    var Upper = 1;\r\n                    var Lower = 1;\r\n                    console.log(metX);\r\n                    for (let i = 0; i < Scope.length; i++) {\r\n                        Upper = 1;\r\n                        Lower = 1;\r\n                        for (let j = 0; j < Scope.length; j++) {\r\n                            if (i !== j) {\r\n                                Upper *= metX[Scope[j] - 1] - X;\r\n                                Lower *= metX[Scope[j] - 1] - metX[Scope[i] - 1];\r\n                            }\r\n                        }\r\n                        this.Answer += (Upper / Lower) * metY[Scope[i] - 1];\r\n                    }\r\n                    this.setState({\r\n                        Actual_Answer: this.Answer\r\n                    })\r\n                }\r\n                catch {}\r\n                break;\r\n            \r\n            case \"Linear_Regression\":\r\n                // Store a\r\n                try{\r\n                    Final_Answer = [];\r\n                    // For Replace a with Final_Answer\r\n                    Prove_Answer = \"\";\r\n                    var metX = JSON.parse(this.state.metX);\r\n                    var metY = JSON.parse(this.state.metY);\r\n                    var n = metX.length;\r\n                    var SumA = Math.sum(metX);\r\n                    var SumB = Math.sum(metY);\r\n                    var SumAB = Math.sum(Math.multiply(metX,metY));\r\n                    var SumPowA = Math.sum(Math.multiply(metX,metX));\r\n                    var metA = [[n, SumA], [SumA, SumPowA]];\r\n                    var metB = [SumB, SumAB];\r\n    \r\n                    count = 0;\r\n                    while (count < metA.length) {\r\n                        Xnew = [[n, SumA], [SumA, SumPowA]];\r\n                        // console.log(AnsMet)\r\n                        for (let i = 0; i < metA.length; i++) {\r\n                            Xnew[i][count] = metB[i];\r\n                            // console.log(Xnew)\r\n                        }\r\n                        TempAnswer = (Math.det(Xnew) / Math.det(metA));\r\n                        Final_Answer.push(\r\n                            <p id={count} value={TempAnswer}>\r\n                                a{count} : {TempAnswer}\r\n                            </p>\r\n                        );\r\n                        if(count === 0)\r\n                        {\r\n                            Prove_Answer = this.state.equation.replace(/a0/g,TempAnswer);\r\n                        } \r\n                        else Prove_Answer = Prove_Answer.replace(/a1/g,TempAnswer);\r\n    \r\n                        count++;\r\n                        console.log(TempAnswer);\r\n                        console.log(Prove_Answer);\r\n                    }\r\n    \r\n                    this.setState({\r\n                        ProveAnswer: (\r\n                            <div>\r\n                                <h4>\r\n                                    Equation: {this.state.equation}\r\n                                </h4>\r\n                                <h4>Replace a : </h4>\r\n                                <h5>{Final_Answer}</h5>\r\n                                <h4>\r\n                                    {Prove_Answer.replace(/x/g,this.state.X)+\" = \" \r\n                                    +this.Convert_Eq(Prove_Answer, this.state.X)\r\n                                    }\r\n                                </h4>\r\n                            </div>\r\n                            ),\r\n                        Matrix_Answer: Final_Answer\r\n                    })\r\n                }\r\n                catch {}\r\n                break;\r\n\r\n            case \"Polynomial_Regression\":\r\n                try{\r\n                    Final_Answer = [];\r\n                    // For Replace a with Final_Answer\r\n                    Prove_Answer = \"\";\r\n                    var metX = JSON.parse(this.state.metX);\r\n                    var metY = JSON.parse(this.state.metY);\r\n                    var n = metX.length;\r\n                    var SumA = Math.sum(metX);\r\n                    var SumB = Math.sum(metY);\r\n                    var SumAB = Math.sum(Math.multiply(metX,metY));\r\n                    var SumPow2A = Math.sum(Math.multiply(metX,metX));\r\n                    var SumPow3A = 0;\r\n                    var SumPow4A = 0; \r\n                    var SumPowAB = 0;\r\n                    for(let i = 0; i < n; i++)\r\n                    {\r\n                        SumPow3A+=Math.pow(metX[i],3);\r\n                        SumPow4A+=Math.pow(metX[i],4);\r\n                        SumPowAB+=Math.pow(metX[i],2)*metY[i];\r\n                    }\r\n    \r\n                    var metA = [[n, SumA, SumPow2A], [SumA, SumPow2A, SumPow3A], [SumPow2A, SumPow3A, SumPow4A]];\r\n                    var metB = [SumB, SumAB, SumPowAB];\r\n    \r\n                    count = 0;\r\n\r\n                    while (count < metA.length) {\r\n                        Xnew = [[n, SumA, SumPow2A], [SumA, SumPow2A, SumPow3A], [SumPow2A, SumPow3A, SumPow4A]];\r\n                        for (let i = 0; i < metA.length; i++) {\r\n                            Xnew[i][count] = metB[i];\r\n                        }\r\n                        TempAnswer = (Math.det(Xnew) / Math.det(metA));\r\n                        Final_Answer.push(\r\n                            <p id={count} value={TempAnswer}>\r\n                                a{count} : {TempAnswer}\r\n                            </p>\r\n                        );\r\n                        if(count === 0) Prove_Answer = this.state.equation.replace(/a0/g,TempAnswer);\r\n                        else if(count === 1) Prove_Answer = Prove_Answer.replace(/a1/g,TempAnswer);\r\n                        else Prove_Answer = Prove_Answer.replace(/a2/g,TempAnswer);\r\n    \r\n                        count++;\r\n                    }\r\n                    this.setState({\r\n                        ProveAnswer: (\r\n                            <div>\r\n                                <h4>\r\n                                    Equation: {this.state.equation}\r\n                                </h4>\r\n                                <h4>Replace a : </h4>\r\n                                <h5>{Final_Answer}</h5>\r\n                                <h4>\r\n                                    {Prove_Answer.replace(/x/g,this.state.X)+\" = \" \r\n                                    +this.Convert_Eq(Prove_Answer, this.state.X)\r\n                                    }\r\n                                </h4>\r\n                            </div>\r\n                            ),\r\n                        Matrix_Answer: Final_Answer\r\n                    })\r\n                }\r\n                catch {}\r\n                break;\r\n\r\n            case \"Multiple_Linear_Regression\":\r\n                // try{\r\n                    Final_Answer = [];\r\n                    // For Replace a with Final_Answer\r\n                    Prove_Answer = \"\";\r\n                    var met1 = JSON.parse(this.state.met1);\r\n                    var met2 = JSON.parse(this.state.met2);\r\n                    var met3 = JSON.parse(this.state.met3);\r\n                    var metY = JSON.parse(this.state.metY);\r\n                    var n = met1.length;\r\n                    var Sum1 = Math.sum(met1);\r\n                    var Sum2 = Math.sum(met2);\r\n                    var Sum3 = Math.sum(met3);\r\n                    var SumY = Math.sum(metY);\r\n                    var SumPow2met1 = Math.sum(Math.multiply(met1,met1));\r\n                    var SumPow2met2 = Math.sum(Math.multiply(met2,met2));\r\n                    var SumPow2met3 = Math.sum(Math.multiply(met3,met3));\r\n                    var Mulmet1met2 = Math.sum(Math.multiply(met1,met2));\r\n                    var Mulmet1met3 = Math.sum(Math.multiply(met1,met3));\r\n                    var Mulmet2met3 = Math.sum(Math.multiply(met2,met3));\r\n                    var Summet1metY = Math.sum(Math.multiply(met1,metY));\r\n                    var Summet2metY = Math.sum(Math.multiply(met2,metY));\r\n                    var Summet3metY = Math.sum(Math.multiply(met3,metY));\r\n                 \r\n                    var metA = [[n, Sum1, Sum2, Sum3], \r\n                                [Sum1, SumPow2met1, Mulmet1met2, Mulmet1met3], \r\n                                [Sum2, Mulmet1met2, SumPow2met2, Mulmet2met3],\r\n                                [Sum3, Mulmet1met3, Mulmet2met3, SumPow2met3]];\r\n\r\n                    var metB = [SumY, Summet1metY, Summet2metY, Summet3metY];\r\n    \r\n                    count = 0;\r\n                    console.log(met1,metY);\r\n                    while (count < metA.length) {\r\n                        Xnew = [[n, Sum1, Sum2, Sum3], \r\n                                [Sum1, SumPow2met1, Mulmet1met2, Mulmet1met3], \r\n                                [Sum2, Mulmet1met2, SumPow2met2, Mulmet2met3],\r\n                                [Sum3, Mulmet1met3, Mulmet2met3, SumPow2met3]];;\r\n                        for (let i = 0; i < metA.length; i++) {\r\n                            Xnew[i][count] = metB[i];\r\n                        }\r\n                        TempAnswer = (Math.det(Xnew) / Math.det(metA));\r\n                        Final_Answer.push(\r\n                            <p id={count} value={TempAnswer}>\r\n                                a{count} : {TempAnswer}\r\n                            </p>\r\n                        );\r\n                        if(count === 0) \r\n                        {\r\n                            Prove_Answer = this.state.equation.replace(/a0/g,TempAnswer);\r\n                        }\r\n                        else if(count === 1) \r\n                        {\r\n                            Prove_Answer = Prove_Answer.replace(/a1/g,TempAnswer);\r\n                            Prove_Answer = Prove_Answer.replace(/x1/g,this.state.X1);\r\n                        }\r\n                        else if(count === 2) \r\n                        {\r\n                            Prove_Answer = Prove_Answer.replace(/a2/g,TempAnswer);\r\n                            Prove_Answer = Prove_Answer.replace(/x2/g,this.state.X2);\r\n                        }\r\n                        else {\r\n                            Prove_Answer = Prove_Answer.replace(/a3/g,TempAnswer);\r\n                            Prove_Answer = Prove_Answer.replace(/x3/g,this.state.X3);\r\n                        }\r\n                        count++;\r\n                    }\r\n                    this.setState({\r\n                        ProveAnswer: (\r\n                            <div>\r\n                                <h4>\r\n                                    Equation: {this.state.equation}\r\n                                </h4>\r\n                                <h4>Replace a : </h4>\r\n                                <h5>{Final_Answer}</h5>\r\n                                <h4>\r\n                                    {Prove_Answer+\"=\"+Math.evaluate(Prove_Answer)}\r\n                                    {/* {Prove_Answer.replace(/x/g,this.state.X)+\" = \" \r\n                                    +this.Convert_Eq(Prove_Answer, this.state.X)\r\n                                    } */}\r\n                                </h4>\r\n                            </div>\r\n                            ),\r\n                        Matrix_Answer: Final_Answer\r\n                    })\r\n                // }\r\n                // catch {}\r\n                break;\r\n            \r\n            case \"Single_Trapezoidal_Rule\":\r\n                break;\r\n\r\n            case \"Composite_Trapezoidal_Rule\":\r\n                break;\r\n\r\n            case \"Simpson_Rule\":\r\n                break;\r\n\r\n            case \"Composite_Simpson_Rule\":\r\n                break;\r\n\r\n            case \"Numerical_Differentiation\":\r\n                var equation = this.state.equation;\r\n                var h = JSON.parse(this.state.h);\r\n                var X = JSON.parse(this.state.X);\r\n                // console.log(h, X);\r\n                this.Answer = 0;\r\n                var ExactAnswer = 0;\r\n                var Error = 0;\r\n                console.log(this.state.Order);\r\n                if(this.state.Order === \"First Divided-Differences\")\r\n                {\r\n                    switch (this.state.ModeForDiff) \r\n                    {\r\n                        case \"Forward\":\r\n                            if(this.state.FormulaForDiff === \"f^1*(x)\")\r\n                            {\r\n                                this.Answer = (this.Convert_Eq(equation, X+h) - this.Convert_Eq(equation, X))/h;\r\n                                ExactAnswer = Math.derivative(equation, \"x\").evaluate({\r\n                                        x: X\r\n                                    });\r\n                                Error = ((ExactAnswer - this.Answer)/ExactAnswer)*100;\r\n                            }\r\n                            else if(this.state.FormulaForDiff === \"f^2*(x)\")\r\n                            {\r\n                                this.Answer = (this.Convert_Eq(equation, (X+2*h)) - \r\n                                                2*(this.Convert_Eq(equation, X+h)) + \r\n                                                this.Convert_Eq(equation, X))/(h*h);\r\n                            }\r\n                            else if(this.state.FormulaForDiff === \"f^3*(x)\")\r\n                            {\r\n                                this.Answer = (this.Convert_Eq(equation, X+(3*h)) - 3*(this.Convert_Eq(equation, X+(2*h))) +\r\n                                3*(this.Convert_Eq(equation, X+h)) - this.Convert_Eq(equation, X))/(h*h*h)\r\n                            }\r\n                            else if(this.state.FormulaForDiff === \"f^4*(x)\")\r\n                            {\r\n                                this.Answer = (this.Convert_Eq(equation, X+(4*h)) - \r\n                                                4*(this.Convert_Eq(equation, X+(3*h))) +\r\n                                                6*(this.Convert_Eq(equation, X+(2*h))) - \r\n                                                4*(this.Convert_Eq(equation, X+h)) + \r\n                                                this.Convert_Eq(equation, X))/(h*h*h);\r\n                            }\r\n                            break;\r\n\r\n                        case \"Backward\":\r\n                            if(this.state.FormulaForDiff === \"f^1*(x)\")\r\n                            {\r\n                                this.Answer = (this.Convert_Eq(equation, X) - this.Convert_Eq(equation, X-h))/h;\r\n                                ExactAnswer = Math.derivative(equation, \"x\").evaluate({\r\n                                        x: X\r\n                                    });\r\n                                Error = ((ExactAnswer - this.Answer)/ExactAnswer)*100;\r\n                            }\r\n                            else if(this.state.FormulaForDiff === \"f^2*(x)\")\r\n                            {\r\n                                this.Answer = (this.Convert_Eq(equation, X) - \r\n                                                2*this.Convert_Eq(equation, (X-h)) + \r\n                                                this.Convert_Eq(equation, (X-(2*h))))/(h*h);\r\n                            }\r\n                            else if(this.state.FormulaForDiff === \"f^3*(x)\")\r\n                            {\r\n                                this.Answer = (this.Convert_Eq(equation, X) - \r\n                                                3*this.Convert_Eq(equation, (X-h)) + \r\n                                                3*(this.Convert_Eq(equation, (X-(2*h)))) -\r\n                                                this.Convert_Eq(equation, (X-(3*h))))/(h*h*h);\r\n                            }\r\n                            else if(this.state.FormulaForDiff === \"f^4*(x)\")\r\n                            {\r\n                                this.Answer = (this.Convert_Eq(equation, X) - \r\n                                                4*this.Convert_Eq(equation, (X-h)) + \r\n                                                6*(this.Convert_Eq(equation, (X-(2*h)))) -\r\n                                                4*(this.Convert_Eq(equation, (X-(3*h)))) +\r\n                                                this.Convert_Eq(equation, (X-(4*h))))/(h*h*h*h);\r\n                            }\r\n                            break;\r\n\r\n                        case \"Central\":\r\n                            if(this.state.FormulaForDiff === \"f^1*(x)\")\r\n                            {\r\n                                this.Answer = (this.Convert_Eq(equation, X+h) - this.Convert_Eq(equation, X-h))/(2*h);\r\n                                ExactAnswer = Math.derivative(equation, \"x\").evaluate({\r\n                                        x: X\r\n                                    });\r\n                                Error = ((ExactAnswer - this.Answer)/ExactAnswer)*100;\r\n                            }\r\n                            else if(this.state.FormulaForDiff === \"f^2*(x)\")\r\n                            {\r\n                                this.Answer = (this.Convert_Eq(equation, X+h) - \r\n                                                2*(this.Convert_Eq(equation, X)) +\r\n                                                this.Convert_Eq(equation, X-h)\r\n                                                )/(h*h);\r\n                            }\r\n                            else if(this.state.FormulaForDiff === \"f^3*(x)\")\r\n                            {\r\n                                this.Answer = (this.Convert_Eq(equation, X+(h*2)) - \r\n                                                2*(this.Convert_Eq(equation, X+h)) + \r\n                                                2*(this.Convert_Eq(equation, X-h)) -\r\n                                                this.Convert_Eq(equation, X-(h*2))\r\n                                                )/(2*(h*h*h));\r\n                            }\r\n                            else if(this.state.FormulaForDiff === \"f^4*(x)\")\r\n                            {\r\n                                this.Answer = (this.Convert_Eq(equation, X+(h*2)) \r\n                                                - (4*this.Convert_Eq(equation, (X+h))) \r\n                                                + (6*this.Convert_Eq(equation, X)) \r\n                                                - (4*this.Convert_Eq(equation, (X+h))) \r\n                                                + this.Convert_Eq(equation, X-(h*2))\r\n                                                )/(h*h*h*h);               \r\n                            }\r\n                            break;\r\n                    }\r\n                    break;\r\n                }\r\n                else \r\n                {\r\n                    switch (this.state.ModeForDiff) \r\n                    {\r\n                        case \"Forward\":\r\n                            if(this.state.FormulaForDiff === \"f^1*(x)\")\r\n                            {\r\n                                this.Answer = ((-1*(this.Convert_Eq(equation, X+(h*2))))\r\n                                                + (4*(this.Convert_Eq(equation, X+h)))\r\n                                                - (4*(this.Convert_Eq(equation, X))))/(2*h);\r\n                                ExactAnswer = Math.derivative(equation, \"x\").evaluate({\r\n                                        x: X\r\n                                    });\r\n                                Error = ((ExactAnswer - this.Answer)/ExactAnswer)*100;\r\n                            }\r\n                            else if(this.state.FormulaForDiff === \"f^2*(x)\")\r\n                            {\r\n                                this.Answer = ((-1*(this.Convert_Eq(equation, X+(h*3))))\r\n                                                + (4*(this.Convert_Eq(equation, X+(h*2))))\r\n                                                - (5*(this.Convert_Eq(equation, X+h)))\r\n                                                + (4*(this.Convert_Eq(equation, X))))/(h*h);\r\n                            }\r\n                            else if(this.state.FormulaForDiff === \"f^3*(x)\")\r\n                            {\r\n                                this.Answer = ((-3*(this.Convert_Eq(equation, X+(h*4))) )\r\n                                                + (14*(this.Convert_Eq(equation, X+(h*3))))\r\n                                                - (24*(this.Convert_Eq(equation, X+(h*2))))\r\n                                                + (18*(this.Convert_Eq(equation, X+h)))\r\n                                                - (18*(this.Convert_Eq(equation, X))))/(2*(h*h*h));\r\n                            }\r\n                            else if(this.state.FormulaForDiff === \"f^4*(x)\")\r\n                            {\r\n                                this.Answer = ((-2*(this.Convert_Eq(equation, X+(h*5)))) \r\n                                                + (11*(this.Convert_Eq(equation, X+(h*4))))\r\n                                                - (24*(this.Convert_Eq(equation, X+(h*3))))\r\n                                                + (26*(this.Convert_Eq(equation, X+(h*2))))\r\n                                                - (14*(this.Convert_Eq(equation, X+(h*1))))\r\n                                                + (3*(this.Convert_Eq(equation, X))))/(h*h*h*h);\r\n                            }\r\n                            break;\r\n\r\n                        case \"Backward\":\r\n                            if(this.state.FormulaForDiff === \"f^1*(x)\")\r\n                            {\r\n                                this.Answer = ((3*(this.Convert_Eq(equation, X))) \r\n                                                - (4*(this.Convert_Eq(equation, (X-h))))\r\n                                                + (this.Convert_Eq(equation, (X-(2*h)))))/(2*h);\r\n                                ExactAnswer = Math.derivative(equation, \"x\").evaluate({\r\n                                        x: X\r\n                                    });\r\n                                Error = ((ExactAnswer - this.Answer)/ExactAnswer)*100;\r\n                            }\r\n                            else if(this.state.FormulaForDiff === \"f^2*(x)\")\r\n                            {\r\n                                this.Answer = ((2*(this.Convert_Eq(equation, X))) \r\n                                                - (5*(this.Convert_Eq(equation, (X-h))))\r\n                                                + (4*(this.Convert_Eq(equation, (X-(h*2)))))\r\n                                                - (this.Convert_Eq(equation, (X-(h*3)))))/(h*h);\r\n                            }\r\n                            else if(this.state.FormulaForDiff === \"f^3*(x)\")\r\n                            {\r\n                                this.Answer = ((5*(this.Convert_Eq(equation, X)))\r\n                                                - (18*(this.Convert_Eq(equation, (X-h))))\r\n                                                + (24*(this.Convert_Eq(equation, (X-(h*2)))))\r\n                                                - (14*(this.Convert_Eq(equation, (X-(h*3)))))\r\n                                                + (this.Convert_Eq(equation, (X-(h*4)))))/(2*(h*h*h));\r\n                            }\r\n                            else if(this.state.FormulaForDiff === \"f^4*(x)\")\r\n                            {\r\n                                this.Answer = ((3*(this.Convert_Eq(equation, X)))\r\n                                                - (14*(this.Convert_Eq(equation, (X-(h*1)))))\r\n                                                + (26*(this.Convert_Eq(equation, (X-(h*2)))))\r\n                                                - (24*(this.Convert_Eq(equation, (X-(h*3)))))\r\n                                                + (11*(this.Convert_Eq(equation, (X-(h*4)))))\r\n                                                - (2*(this.Convert_Eq(equation, (X-(h*5))))))/(h*h*h*h);\r\n                            }\r\n                            break;\r\n\r\n                        case \"Central\":\r\n                            if(this.state.FormulaForDiff === \"f^1*(x)\")\r\n                            {\r\n                                this.Answer = (-1*this.Convert_Eq(equation, X+(2*h)) \r\n                                                + 8*this.Convert_Eq(equation, X+h)\r\n                                                - 8*this.Convert_Eq(equation, X-h)\r\n                                                + this.Convert_Eq(equation, X-(2*h)))/(12*h);\r\n                                ExactAnswer = Math.derivative(equation, \"x\").evaluate({\r\n                                        x: X\r\n                                    });\r\n                                Error = ((ExactAnswer - this.Answer)/ExactAnswer)*100;\r\n                            }\r\n                            else if(this.state.FormulaForDiff === \"f^2*(x)\")\r\n                            {\r\n                                this.Answer = ((-1*this.Convert_Eq(equation, X+(2*h))) \r\n                                                + (16*(this.Convert_Eq(equation, X+h)))\r\n                                                - (30*(this.Convert_Eq(equation, X)))\r\n                                                + (16*(this.Convert_Eq(equation, X-h)))\r\n                                                - (this.Convert_Eq(equation, X-(2*h))))/(12*(h*h));\r\n                            }\r\n                            else if(this.state.FormulaForDiff === \"f^3*(x)\")\r\n                            {\r\n                                this.Answer = ((-1*(this.Convert_Eq(equation, X+(3*h))))\r\n                                                + (8*(this.Convert_Eq(equation, X+(2*h))))\r\n                                                - (13*(this.Convert_Eq(equation, X+h)))\r\n                                                + (13*(this.Convert_Eq(equation, X-h)))\r\n                                                - (8*(this.Convert_Eq(equation, X+(2*h))))\r\n                                                + (this.Convert_Eq(equation, X-(3*h))))/(8*(h*h*h));\r\n                            }\r\n                            else if(this.state.FormulaForDiff === \"f^4*(x)\")\r\n                            {\r\n                                this.Answer = ((-1*(this.Convert_Eq(equation, X+(3*h))))\r\n                                                + (12*(this.Convert_Eq(equation, X+(2*h))))\r\n                                                - (39*(this.Convert_Eq(equation, X+h)))\r\n                                                + (56*(this.Convert_Eq(equation, X)))\r\n                                                - (39*(this.Convert_Eq(equation, X-h)))\r\n                                                + (12*(this.Convert_Eq(equation, X-(2*h))))\r\n                                                - (this.Convert_Eq(equation, X-(3*h))))/(6*(h*h*h*h));             \r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n                if(ExactAnswer === 0 && Error === 0 && this.Answer !== 0)\r\n                {\r\n                    if(this.state.Actual_Answer === 0 && this.state.Error === 0 && this.state.ExactAnswer === 0)\r\n                    {\r\n                        alert(\"Do you want to submit your data?\");\r\n                        this.setState({\r\n                            Actual_Answer: this.Answer,\r\n                            Error: 0,\r\n                            ExactAnswer: 0\r\n                        });\r\n                    }\r\n                    else if(this.state.Actual_Answer !== this.Answer ||\r\n                            this.state.Error !== Error ||\r\n                            this.state.ExactAnswer !== ExactAnswer)\r\n                    {\r\n                        alert(\"Do you want to submit your data?\");\r\n                        this.setState({\r\n                            Actual_Answer: this.Answer,\r\n                            Error: 0,\r\n                            ExactAnswer: 0\r\n                        });\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    if(this.state.Actual_Answer === 0 && this.state.Error === 0 && this.state.ExactAnswer === 0)\r\n                    {\r\n                        alert(\"Do you want to submit your data?\");\r\n                        this.setState({\r\n                            Actual_Answer: this.Answer,\r\n                            Error: Error,\r\n                            ExactAnswer: ExactAnswer\r\n                        });\r\n                    }\r\n                    else if(this.state.Actual_Answer !== this.Answer ||\r\n                            this.state.Error !== Error ||\r\n                            this.state.ExactAnswer !== ExactAnswer)\r\n                    {\r\n                        alert(\"Do you want to submit your data?\");\r\n                        this.setState({\r\n                            Actual_Answer: this.Answer,\r\n                            Error: Error,\r\n                            ExactAnswer: ExactAnswer\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n                \r\n            default:\r\n                console.log(\"Null\");\r\n        }\r\n    };\r\n\r\n    getEquationFromAPI = (event) => {\r\n        var splitValue = \"\";\r\n        switch (this.state.Chapter) {\r\n            case \"Bisection\":\r\n                splitValue = event.target.value.split(\",\");\r\n                this.setState({\r\n                    equation: splitValue[0],\r\n                    left: splitValue[1],\r\n                    right: splitValue[2],\r\n                });\r\n                break;\r\n\r\n            case \"False_Position\":\r\n                splitValue = event.target.value.split(\",\");\r\n                this.setState({\r\n                    equation: splitValue[0],\r\n                    left: splitValue[1],\r\n                    right: splitValue[2],\r\n                });\r\n                break;\r\n\r\n            case \"One_Point_Iteration\":\r\n                splitValue = event.target.value.split(\",\");\r\n                this.setState({\r\n                    equation: splitValue[0],\r\n                    X0: splitValue[1],\r\n                });\r\n                break;\r\n\r\n            case \"Newton_Raphson\":\r\n                splitValue = event.target.value.split(\",\");\r\n                this.setState({\r\n                    equation: splitValue[0],\r\n                    X0: splitValue[1],\r\n                });\r\n                break;\r\n\r\n            case \"Secant_Method\":\r\n                splitValue = event.target.value.split(\",\");\r\n                this.setState({\r\n                    equation: splitValue[0],\r\n                    X0: splitValue[1],\r\n                    X1: splitValue[2],\r\n                });\r\n                break;\r\n\r\n            case \"Cramer_Rule\":\r\n                splitValue = event.target.value.split(\"|\");\r\n                splitValue[1] = splitValue[1].slice(2, splitValue[1].length);\r\n                this.setState({\r\n                    metA: splitValue[0],\r\n                    metB: splitValue[1],\r\n                });\r\n                break;\r\n\r\n            case \"Gauss_Elimination\":\r\n                splitValue = event.target.value.split(\"|\");\r\n                splitValue[1] = splitValue[1].slice(2, splitValue[1].length);\r\n                this.setState({\r\n                    metA: splitValue[0],\r\n                    metB: splitValue[1],\r\n                });\r\n                break;\r\n\r\n            case \"Gauss_Jordan\":\r\n                splitValue = event.target.value.split(\"|\");\r\n                splitValue[1] = splitValue[1].slice(2, splitValue[1].length);\r\n                this.setState({\r\n                    metA: splitValue[0],\r\n                    metB: splitValue[1],\r\n                });\r\n                break;\r\n\r\n            case \"LU_Decompost\":\r\n                splitValue = event.target.value.split(\"|\");\r\n                splitValue[1] = splitValue[1].slice(2, splitValue[1].length);\r\n                this.setState({\r\n                    metA: splitValue[0],\r\n                    metB: splitValue[1],\r\n                });\r\n                break;\r\n\r\n            case \"Jacobi_Iteration\":\r\n                splitValue = event.target.value.split(\"|\");\r\n                splitValue[1] = splitValue[1].slice(2, splitValue[1].length);\r\n                splitValue[2] = splitValue[2].slice(2, splitValue[2].length)\r\n                this.setState({\r\n                    metA: splitValue[0],\r\n                    metB: splitValue[1],\r\n                    metX: splitValue[2],\r\n                });\r\n                break;\r\n\r\n            case \"Gauss_Seidel_Iteration\":\r\n                splitValue = event.target.value.split(\"|\");\r\n                splitValue[1] = splitValue[1].slice(2, splitValue[1].length);\r\n                splitValue[2] = splitValue[2].slice(2, splitValue[2].length);\r\n                this.setState({\r\n                    metA: splitValue[0],\r\n                    metB: splitValue[1],\r\n                    metX: splitValue[2],\r\n                });\r\n                break;\r\n\r\n            case \"Conjugate_Gradient\":\r\n                splitValue = event.target.value.split(\"|\");\r\n                splitValue[1] = splitValue[1].slice(2, splitValue[1].length);\r\n                splitValue[2] = splitValue[2].slice(2, splitValue[2].length);\r\n                this.setState({\r\n                    metA: splitValue[0],\r\n                    metB: splitValue[1],\r\n                    metX: splitValue[2],\r\n                });\r\n                break;\r\n\r\n            case \"Lagrange_Interpolation\":\r\n                splitValue = event.target.value.split(\"|\");\r\n                splitValue[1] = splitValue[1].slice(2, splitValue[1].length);\r\n                splitValue[2] = splitValue[2].slice(2, splitValue[2].length);\r\n                splitValue[3] = splitValue[3].slice(2, splitValue[3].length);\r\n                console.log(splitValue[0],splitValue[1],splitValue[2],splitValue[3])\r\n                this.setState({\r\n                    metX: splitValue[0],\r\n                    metY: splitValue[1],\r\n                    Scope: splitValue[2],\r\n                    X: splitValue[3],\r\n                });\r\n                break;\r\n\r\n            case \"Linear_Regression\":\r\n                splitValue = event.target.value.split(\"|\");\r\n                splitValue[1] = splitValue[1].slice(2, splitValue[1].length);\r\n                splitValue[2] = splitValue[2].slice(2, splitValue[2].length);\r\n                splitValue[3] = splitValue[3].slice(2, splitValue[3].length);\r\n                console.log(splitValue[0],splitValue[1],splitValue[2],splitValue[3])\r\n                this.setState({\r\n                    equation: splitValue[0],\r\n                    metX: splitValue[1],\r\n                    metY: splitValue[2],\r\n                    X: splitValue[3],\r\n                });\r\n                break;\r\n            \r\n            case \"Polynomial_Regression\":\r\n                splitValue = event.target.value.split(\"|\");\r\n                splitValue[1] = splitValue[1].slice(2, splitValue[1].length);\r\n                splitValue[2] = splitValue[2].slice(2, splitValue[2].length);\r\n                splitValue[3] = splitValue[3].slice(2, splitValue[3].length);\r\n                console.log(splitValue[0],splitValue[1],splitValue[2],splitValue[3])\r\n                this.setState({\r\n                    equation: splitValue[0],\r\n                    metX: splitValue[1],\r\n                    metY: splitValue[2],\r\n                    X: splitValue[3],\r\n                });\r\n                break;\r\n            \r\n            case \"Multiple_Linear_Regression\":\r\n                splitValue = event.target.value.split(\"|\");\r\n                splitValue[1] = splitValue[1].slice(2, splitValue[1].length);\r\n                splitValue[2] = splitValue[2].slice(2, splitValue[2].length);\r\n                splitValue[3] = splitValue[3].slice(2, splitValue[3].length);\r\n                splitValue[4] = splitValue[4].slice(2, splitValue[4].length);\r\n                splitValue[5] = splitValue[5].slice(2, splitValue[5].length);\r\n                splitValue[6] = splitValue[6].slice(2, splitValue[6].length);\r\n                splitValue[7] = splitValue[7].slice(2, splitValue[7].length);\r\n                console.log(splitValue[0],splitValue[1],splitValue[2],splitValue[3],splitValue[4],splitValue[5],splitValue[6],splitValue[7])\r\n                this.setState({\r\n                    equation: splitValue[0],\r\n                    met1: splitValue[1],\r\n                    met2: splitValue[2],\r\n                    met3: splitValue[3],\r\n                    metY: splitValue[4],\r\n                    X1: splitValue[5],\r\n                    X2: splitValue[6],\r\n                    X3: splitValue[7]\r\n                });\r\n                break;\r\n            \r\n            case \"Single_Trapezoidal_Rule\":\r\n                splitValue = event.target.value.split(\"|\");\r\n                splitValue[1] = splitValue[1].slice(2, splitValue[1].length);\r\n                splitValue[2] = splitValue[2].slice(2, splitValue[2].length);\r\n                console.log(splitValue[0],splitValue[1],splitValue[2])\r\n                this.setState({\r\n                    equation: splitValue[0],\r\n                    Upper: splitValue[1],\r\n                    Lower: splitValue[2],\r\n                });\r\n                break;\r\n\r\n            case \"Composite_Trapezoidal_Rule\":\r\n                splitValue = event.target.value.split(\"|\");\r\n                splitValue[1] = splitValue[1].slice(2, splitValue[1].length);\r\n                splitValue[2] = splitValue[2].slice(2, splitValue[2].length);\r\n                splitValue[3] = splitValue[3].slice(2, splitValue[3].length);\r\n                console.log(splitValue[0],splitValue[1],splitValue[2],splitValue[3])\r\n                this.setState({\r\n                    equation: splitValue[0],\r\n                    Upper: splitValue[1],\r\n                    Lower: splitValue[2],\r\n                    Scope: splitValue[3],\r\n                });\r\n                break;\r\n\r\n            case \"Simpson_Rule\":\r\n                splitValue = event.target.value.split(\"|\");\r\n                splitValue[1] = splitValue[1].slice(2, splitValue[1].length);\r\n                splitValue[2] = splitValue[2].slice(2, splitValue[2].length);\r\n                console.log(splitValue[0],splitValue[1],splitValue[2])\r\n                this.setState({\r\n                    equation: splitValue[0],\r\n                    Upper: splitValue[1],\r\n                    Lower: splitValue[2],\r\n                });\r\n                break;\r\n            \r\n            case \"Composite_Simpson_Rule\":\r\n                splitValue = event.target.value.split(\"|\");\r\n                splitValue[1] = splitValue[1].slice(2, splitValue[1].length);\r\n                splitValue[2] = splitValue[2].slice(2, splitValue[2].length);\r\n                splitValue[3] = splitValue[3].slice(2, splitValue[3].length);\r\n                console.log(splitValue[0],splitValue[1],splitValue[2],splitValue[3])\r\n                this.setState({\r\n                    equation: splitValue[0],\r\n                    Upper: splitValue[1],\r\n                    Lower: splitValue[2],\r\n                    Scope: splitValue[3],\r\n                });\r\n                break;\r\n            \r\n            case \"Numerical_Differentiation\":\r\n                splitValue = event.target.value.split(\"|\");\r\n                splitValue[1] = splitValue[1].slice(2, splitValue[1].length);\r\n                splitValue[2] = splitValue[2].slice(2, splitValue[2].length);\r\n                console.log(splitValue[0],splitValue[1],splitValue[2])\r\n                this.setState({\r\n                    equation: splitValue[0],\r\n                    X: splitValue[1],\r\n                    h: splitValue[2],\r\n                });\r\n                break;    \r\n\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    // ****** Chapter 2 ****** //\r\n\r\n    // Generate Input For each row & column\r\n    generateInputMatrixA = (row, column) => {\r\n        try {\r\n            var Input_Table = [];\r\n            for (let i = 0; i < column; i++) {\r\n                Input_Table.push(\r\n                    <input \r\n                        className=\"input_matrix\" \r\n                        id={row.toString() + i.toString()}\r\n                        // key={row.toString() + i.toString()}\r\n                    ></input>\r\n                );\r\n            }\r\n            return Input_Table;\r\n        } catch {}\r\n    };\r\n\r\n    // Generate Input MatrixA\r\n    generateMatrixATable = (row, column) => {\r\n        try {\r\n            if (row < 2 || column < 2) {\r\n                this.GetInputMatrix = false;\r\n            } else if (row <= 20 && row > 1 && column <= 20 && column > 1) {\r\n                this.GetInputMatrix = true;\r\n                var Matrix_Table = [];\r\n                for (let i = 0; i < row; i++) {\r\n                    Matrix_Table.push(\r\n                        <tr>{this.generateInputMatrixA(i, column)}</tr>\r\n                    );\r\n                }\r\n                return Matrix_Table;\r\n            }\r\n        } catch (e) {}\r\n    };\r\n\r\n    // Generate Input MatrixB\r\n    generateMatrixBTable = (row, column, name) => {\r\n        try {\r\n            if (row < 2 || column < 2) {\r\n                this.GetInputMatrix = false;\r\n            } else if (row <= 20 && row > 1 && column <= 20 && column > 1) {\r\n                var Matrix_Table = [];\r\n                for (let i = 0; i < row; i++) {\r\n                    Matrix_Table.push(\r\n                        <tr>\r\n                            <input className=\"input_matrix\" id={name+i.toString()} key={name+i.toString()}></input>\r\n                        </tr>\r\n                    );\r\n                    // console.log(i.toString());\r\n                }\r\n            }\r\n            return Matrix_Table;\r\n        } catch {}\r\n    };\r\n\r\n    // Manual Input Matric Chapter 2\r\n    ShowInputChapter2 = (Data) => {\r\n        var HTML = [];\r\n        if(this.state.Chapter === \"Cramer_Rule\" ||\r\n        this.state.Chapter === \"Gauss_Elimination\" ||\r\n        this.state.Chapter === \"Gauss_Jordan\" ||\r\n        this.state.Chapter === \"LU_Decompost\")\r\n        {\r\n            if (this.state.ManualInput === true) {\r\n                this.GetInputMatrix = true;\r\n                HTML.push(\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <label>\r\n                            Row:\r\n                            <input\r\n                                className=\"input_size\" \r\n                                id=\"row_Cramer\"\r\n                                type=\"number\"\r\n                                name=\"row\"\r\n                                value={this.state.row}\r\n                                onChange={this.handleChange}\r\n                            ></input>\r\n                            Column:\r\n                            <input\r\n                                className=\"input_size\" \r\n                                id=\"row_Cramer\"\r\n                                type=\"number\"\r\n                                name=\"column\"\r\n                                value={this.state.column}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <div className=\"DisplayFlex\">\r\n                                <div className=\"matrixA\">\r\n                                    Input MatrixA:\r\n                                    <table>\r\n                                        {this.generateMatrixATable(\r\n                                            this.state.row,\r\n                                            this.state.column\r\n                                        )}\r\n                                    </table>\r\n                                </div>\r\n                                <div className=\"matrixB\">\r\n                                    Input MatrixB:\r\n                                    <table>\r\n                                        {this.generateMatrixBTable(\r\n                                            this.state.row,\r\n                                            this.state.column,\r\n                                            \"B\"\r\n                                        )}\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                            <h3>\r\n                                <MathJaxContext>\r\n                                    <MathJax dynamic>\r\n                                        <div className=\"DisplayFlex\">\r\n                                            <div className=\"matrixA\">\r\n                                            MatrixA : {this.Convert_Latex(this.state.metA)}\r\n                                            </div>\r\n                                            <div className=\"matrixB\">\r\n                                            MatrixB : {this.Convert_Latex(this.state.metB)}\r\n                                            </div>\r\n                                        </div>\r\n                                    </MathJax>\r\n                                </MathJaxContext>\r\n                            </h3>\r\n                            <input type=\"submit\" value=\"Submit\" />\r\n                            <br/>\r\n                            <hr/>\r\n                            <h3>\r\n                            <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                    Answer : {this.state.Matrix_Answer}\r\n                                </MathJax>\r\n                            </MathJaxContext>\r\n                            </h3>\r\n                        </label>\r\n                    </form>\r\n                );\r\n                return HTML;\r\n            }\r\n            if (this.state.ManualInput === false) {\r\n                HTML = [];\r\n                this.GetInputMatrix = false;\r\n                HTML.push(\r\n                    <label>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <select\r\n                                onChange={this.getEquationFromAPI}\r\n                                value={[this.state.metA, this.state.metB]}\r\n                            >\r\n                                <option value=\"\">Choose Example Equation</option>\r\n                                {Data}\r\n                            </select>\r\n                            <h3>\r\n                                <MathJaxContext>\r\n                                    <MathJax dynamic>\r\n                                        <div className=\"DisplayFlex\">\r\n                                            <div className=\"matrixA\">\r\n                                            MatrixA : {this.Convert_Latex(this.state.metA)}\r\n                                            </div>\r\n                                            <div className=\"matrixB\">\r\n                                            MatrixB : {this.Convert_Latex(this.state.metB)}\r\n                                            </div>\r\n                                        </div>\r\n                                    </MathJax>\r\n                                </MathJaxContext>\r\n                            </h3>\r\n                            <input type=\"submit\" value=\"Submit\" />\r\n                            <br/>\r\n                            <hr/>\r\n                            <h3>\r\n                            <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                    Answer : {this.state.Matrix_Answer}\r\n                                </MathJax>\r\n                            </MathJaxContext>\r\n                            </h3>\r\n                        </form>\r\n                    </label>\r\n                );\r\n                return HTML;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if (this.state.ManualInput === true) {\r\n                this.GetInputMatrix = true;\r\n                HTML.push(\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <label>\r\n                            Row:\r\n                            <input\r\n                                className=\"input_size\" \r\n                                id=\"row_Cramer\"\r\n                                type=\"number\"\r\n                                name=\"row\"\r\n                                value={this.state.row}\r\n                                onChange={this.handleChange}\r\n                            ></input>\r\n                            Column:\r\n                            <input\r\n                                className=\"input_size\" \r\n                                id=\"row_Cramer\"\r\n                                type=\"number\"\r\n                                name=\"column\"\r\n                                value={this.state.column}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <br />\r\n                            <div className=\"DisplayFlex\">\r\n                                <div className=\"matrixA\">\r\n                                    Input MatrixA:\r\n                                    <table>\r\n                                        {this.generateMatrixATable(\r\n                                            this.state.row,\r\n                                            this.state.column\r\n                                        )}\r\n                                    </table>\r\n                                </div>\r\n                                <div className=\"matrixB\">\r\n                                    Input MatrixB:\r\n                                    <table>\r\n                                        {this.generateMatrixBTable(\r\n                                            this.state.row,\r\n                                            this.state.column,\r\n                                            \"B\"\r\n                                        )}\r\n                                    </table>\r\n                                </div>\r\n                                <div className=\"matrixB\">\r\n                                    Input MatrixX:\r\n                                    <table>\r\n                                        {this.generateMatrixBTable(\r\n                                            this.state.row,\r\n                                            this.state.column,\r\n                                            \"X\"\r\n                                        )}\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        <h3>\r\n                            <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                    <div className=\"DisplayFlex\">\r\n                                        <div className=\"matrixA\">\r\n                                        MatrixA : {this.Convert_Latex(this.state.metA)}\r\n                                        </div>\r\n                                        <div className=\"matrixB\">\r\n                                        MatrixB : {this.Convert_Latex(this.state.metB)}\r\n                                        </div>\r\n                                        <div className=\"matrixB\">\r\n                                        MatrixX : {this.Convert_Latex(this.state.metX)}\r\n                                        </div>\r\n                                    </div>\r\n                                </MathJax>\r\n                            </MathJaxContext>\r\n                        </h3>\r\n                        <input type=\"submit\" value=\"Submit\" />\r\n                        <br/>\r\n                        <hr/>\r\n                        <h3>\r\n                            <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                    Answer : {this.state.Matrix_Answer}\r\n                                </MathJax>\r\n                            </MathJaxContext>\r\n                        </h3>\r\n                        </label>\r\n                    </form>\r\n                );\r\n                return HTML;\r\n            }\r\n            if (this.state.ManualInput === false) {\r\n                HTML = [];\r\n                this.GetInputMatrix = false;\r\n                HTML.push(\r\n                    <label>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <select\r\n                                onChange={this.getEquationFromAPI}\r\n                                value={[this.state.metA, this.state.metB, this.state.metX]}\r\n                            >\r\n                                <option value=\"\">Choose Example Equation</option>\r\n                                {Data}\r\n                            </select>\r\n                            <h3>\r\n                                <MathJaxContext>\r\n                                    <MathJax dynamic>\r\n                                        <div className=\"DisplayFlex\">\r\n                                            <div className=\"matrixA\">\r\n                                            MatrixA : {this.Convert_Latex(this.state.metA)}\r\n                                            </div>\r\n                                            <div className=\"matrixB\">\r\n                                            MatrixB : {this.Convert_Latex(this.state.metB)}\r\n                                            </div>\r\n                                            <div className=\"matrixB\">\r\n                                            MatrixX : {this.Convert_Latex(this.state.metX)}\r\n                                            </div>\r\n                                        </div>\r\n                                    </MathJax>\r\n                                </MathJaxContext>\r\n                            </h3>\r\n                            <input type=\"submit\" value=\"Submit\" />\r\n                            <br/>\r\n                            <hr/>\r\n                            <h3>\r\n                            <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                    Answer : {this.state.Matrix_Answer}\r\n                                </MathJax>\r\n                            </MathJaxContext>\r\n                            </h3>\r\n                        </form>\r\n                    </label>\r\n                );\r\n                return HTML;\r\n            }\r\n        }\r\n    };\r\n\r\n    // ************************ //\r\n\r\n    // ****** Chapter 3 ****** //\r\n    generateMatrixXTable = (Size) => {\r\n        try {\r\n            if (Size < 2) {\r\n                this.GetInputMatrix = false;\r\n            } else if (Size <= 20 && Size > 1 ) {\r\n                this.GetInputMatrix = true;\r\n                var Matrix_Table = [];\r\n                for (let i = 0; i < Size; i++) {\r\n                    Matrix_Table.push(\r\n                        <tr>\r\n                            <input\r\n                                id={\"X\"+i.toString()}\r\n                            ></input>\r\n                        </tr>\r\n                    );\r\n                }\r\n                return Matrix_Table;\r\n            }\r\n        } catch (e) {}\r\n    };\r\n\r\n    generateMatrixYTable = (Size) => {\r\n        try {\r\n            if (Size < 2) {\r\n                this.GetInputMatrix = false;\r\n            } else if (Size <= 20 && Size > 1 ) {\r\n                this.GetInputMatrix = true;\r\n                var Matrix_Table = [];\r\n                for (let i = 0; i < Size; i++) {\r\n                    Matrix_Table.push(\r\n                        <tr>\r\n                            <input\r\n                                id={\"Y\"+i.toString()}\r\n                            ></input>\r\n                        </tr>\r\n                    );\r\n                }\r\n                return Matrix_Table;\r\n            }\r\n        } catch (e) {}\r\n    };\r\n\r\n    AddDefaultValueToTable = (met, Size) =>\r\n    {\r\n        console.log(met);\r\n        try {\r\n            if (Size < 2) {\r\n                this.GetInputMatrix = false;\r\n            } else if (Size <= 20 && Size > 1 ) {\r\n                this.GetInputMatrix = true;\r\n                var Matrix_Table = [];\r\n                for (let i = 0; i < Size; i++) {\r\n                    Matrix_Table.push(\r\n                        <tr>\r\n                            <input\r\n                                className=\"input_matrix\"\r\n                                id={\"Y\"+i.toString()}\r\n                                value={met[i]}\r\n                            ></input>\r\n                        </tr>\r\n                    );\r\n                }\r\n                return Matrix_Table;\r\n            }\r\n        } catch (e) {}\r\n    }\r\n\r\n    // Manual Input Matric Chapter 3\r\n    ShowInputChapter3 = (Data) => {\r\n        var HTML = [];\r\n        if (this.state.ManualInput === true) {\r\n            this.GetInputMatrix = true;\r\n            HTML.push(\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        Size of Data:\r\n                        <input\r\n                            id=\"Size\"\r\n                            type=\"number\"\r\n                            name=\"Size\"\r\n                            value={this.state.Size}\r\n                            onChange={this.handleChange}\r\n                        ></input>\r\n                        Scope:\r\n                        <input\r\n                            id=\"Scope\"\r\n                            type=\"text\"\r\n                            name=\"Scope\"\r\n                            value={this.state.Scope}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        X:\r\n                        <input\r\n                            id=\"X\"\r\n                            type=\"number\"\r\n                            name=\"X\"\r\n                            value={this.state.X}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <br />\r\n                        Input MatrixX:\r\n                        <table>\r\n                            {this.generateMatrixXTable(\r\n                                this.state.Size\r\n                            )}\r\n                        </table>\r\n                        <br />\r\n                        Input MatrixY:\r\n                        <table>\r\n                            {this.generateMatrixYTable(\r\n                                this.state.Size\r\n                            )}\r\n                        </table>\r\n                    </label>\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                    Answer : {this.state.Actual_Answer}\r\n                </form>\r\n            );\r\n            return HTML;\r\n        }\r\n        if (this.state.ManualInput === false) {\r\n            HTML = [];\r\n            this.GetInputMatrix = false;\r\n            HTML.push(\r\n                <div>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <select\r\n                            onChange={this.getEquationFromAPI}\r\n                            value={[this.state.metX, this.state.metY, this.state.Scope, this.state.X]}\r\n                        >\r\n                            <option value=\"\">Choose Example Equation</option>\r\n                            {Data}\r\n                        </select>\r\n                        {/* {this.AddDefaultValueToTable(this.state.metX, JSON.parse(this.state.metX)).length} */}\r\n                        <br/>\r\n                        <input type=\"submit\" value=\"Submit\" />\r\n                            <br/>\r\n                            <hr/>\r\n                            <h3>\r\n                                <MathJaxContext>\r\n                                    <MathJax dynamic>\r\n                                    Answer : {this.state.Actual_Answer}\r\n                                    </MathJax>\r\n                                </MathJaxContext>\r\n                            </h3>\r\n                    </form>\r\n                </div>\r\n            );\r\n            return HTML;\r\n        }\r\n    };\r\n\r\n    // ************************ //\r\n\r\n    // ****** Chapter 4 ****** //\r\n    generateMatrixXnTable = (Size, n) => {\r\n        try {\r\n            if (Size < 2) {\r\n                this.GetInputMatrix = false;\r\n            } else if (Size <= 20 && Size > 1 ) {\r\n                this.GetInputMatrix = true;\r\n                var Matrix_Table = [];\r\n                for (let i = 0; i < Size; i++) {\r\n                    Matrix_Table.push(\r\n                        <tr>\r\n                            <input\r\n                                id={\"X\"+n.toString()+i.toString()}\r\n                            ></input>\r\n                        </tr>\r\n                    );\r\n                }\r\n                return Matrix_Table;\r\n            }\r\n        } catch (e) {}\r\n    };\r\n\r\n    ShowInputChapter4 = (Data) => {\r\n        var HTML = [];\r\n        if(this.state.Chapter !== \"Multiple_Linear_Regression\")\r\n        {\r\n            if (this.state.ManualInput === true) {\r\n                this.GetInputMatrix = true;\r\n                HTML.push(\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <label>\r\n                            Size of Data:\r\n                            <input\r\n                                id=\"Size\"\r\n                                type=\"number\"\r\n                                name=\"Size\"\r\n                                value={this.state.Size}\r\n                                onChange={this.handleChange}\r\n                            ></input>\r\n                            X:\r\n                            <input\r\n                                id=\"X\"\r\n                                type=\"number\"\r\n                                name=\"X\"\r\n                                value={this.state.X}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <br />\r\n                            Input MatrixX:\r\n                            <table>\r\n                                {this.generateMatrixXTable(\r\n                                    this.state.Size\r\n                                )}\r\n                            </table>\r\n                            <br />\r\n                            Input MatrixY:\r\n                            <table>\r\n                                {this.generateMatrixYTable(\r\n                                    this.state.Size\r\n                                )}\r\n                            </table>\r\n                        </label>\r\n                        <input type=\"submit\" value=\"Submit\" />\r\n                        <br/>\r\n                        Value of a : {this.state.Matrix_Answer}\r\n                        <h4>Answer</h4>\r\n                        {this.state.ProveAnswer}\r\n                        <br/>\r\n                    </form>\r\n                );\r\n                return HTML;\r\n            }\r\n            if (this.state.ManualInput === false) {\r\n                HTML = [];\r\n                this.GetInputMatrix = false;\r\n                HTML.push(\r\n                    <div>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <select\r\n                                onChange={this.getEquationFromAPI}\r\n                                value={[this.state.equation, this.state.metX, this.state.metY, this.state.X]}\r\n                            >\r\n                                <option value=\"\">Choose Example Equation</option>\r\n                                {Data}\r\n                            </select>\r\n                            <input type=\"submit\" value=\"Submit\" />\r\n                            <br/>\r\n                            Value of a : {this.state.Matrix_Answer}\r\n                            <h4>Answer</h4>\r\n                            {this.state.ProveAnswer}\r\n                            <br/>\r\n                        </form>\r\n                    </div>\r\n                );\r\n                return HTML;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if (this.state.ManualInput === true) {\r\n                this.GetInputMatrix = true;\r\n                HTML.push(\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <label>\r\n                            Size of Data:\r\n                            <input\r\n                                id=\"Size\"\r\n                                type=\"number\"\r\n                                name=\"Size\"\r\n                                value={this.state.Size}\r\n                                onChange={this.handleChange}\r\n                            ></input>\r\n                            X1:\r\n                            <input\r\n                                id=\"X1\"\r\n                                type=\"number\"\r\n                                name=\"X1\"\r\n                                value={this.state.X1}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            X2:\r\n                            <input\r\n                                id=\"X2\"\r\n                                type=\"number\"\r\n                                name=\"X2\"\r\n                                value={this.state.X2}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            X3:\r\n                            <input\r\n                                id=\"X3\"\r\n                                type=\"number\"\r\n                                name=\"X3\"\r\n                                value={this.state.X3}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <br />\r\n                            Input MatrixX1:\r\n                            <table>\r\n                                {this.generateMatrixXnTable(\r\n                                    this.state.Size,1\r\n                                )}\r\n                            </table>\r\n                            Input MatrixX2:\r\n                            <table>\r\n                                {this.generateMatrixXnTable(\r\n                                    this.state.Size,2\r\n                                )}\r\n                            </table>\r\n                            Input MatrixX3:\r\n                            <table>\r\n                                {this.generateMatrixXnTable(\r\n                                    this.state.Size,3\r\n                                )}\r\n                            </table>\r\n                            <br />\r\n                            Input MatrixY:\r\n                            <table>\r\n                                {this.generateMatrixYTable(\r\n                                    this.state.Size\r\n                                )}\r\n                            </table>\r\n                        </label>\r\n                        <input type=\"submit\" value=\"Submit\" />\r\n                        <br/>\r\n                        Value of a : {this.state.Matrix_Answer}\r\n                        <h4>Answer</h4>\r\n                        {this.state.ProveAnswer}\r\n                        <br/>\r\n                    </form>\r\n                );\r\n                return HTML;\r\n            }\r\n            if (this.state.ManualInput === false) {\r\n                HTML = [];\r\n                this.GetInputMatrix = false;\r\n                HTML.push(\r\n                    <div>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <select\r\n                                onChange={this.getEquationFromAPI}\r\n                                value={[this.state.equation, this.state.met1, this.state.met2, this.state.met3, \r\n                                        this.state.metY, this.state.X1, this.state.X2, this.state.X3]}\r\n                            >\r\n                                <option value=\"\">Choose Example Equation</option>\r\n                                {Data}\r\n                            </select>\r\n                            <input type=\"submit\" value=\"Submit\" />\r\n                            <br/>\r\n                            Value of a : {this.state.Matrix_Answer}\r\n                            <h4>Answer</h4>\r\n                            {this.state.ProveAnswer}\r\n                            <br/>\r\n                        </form>\r\n                    </div>\r\n                );\r\n                return HTML;\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    // ************************ //\r\n\r\n    // ****** Chapter 5 ****** //\r\n\r\n    ShowInputChapter5 = (Data) => {\r\n        var HTML = [];\r\n        if(this.state.Chapter === \"Composite_Trapezoidal_Rule\" || this.state.Chapter === \"Composite_Simpson_Rule\")\r\n        {\r\n            if (this.state.ManualInput === true) {\r\n                this.GetInputMatrix = true;\r\n                HTML.push(\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <label>\r\n                            equation\r\n                            <input\r\n                                id=\"equation\"\r\n                                type=\"text\"\r\n                                name=\"equation\"\r\n                                value={this.state.equation}\r\n                                onChange={this.handleChange}\r\n                            ></input>\r\n                            Upper:\r\n                            <input\r\n                                id=\"Upper\"\r\n                                type=\"number\"\r\n                                name=\"Upper\"\r\n                                value={this.state.Upper}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            Lower:\r\n                            <input\r\n                                id=\"Lower\"\r\n                                type=\"number\"\r\n                                name=\"Lower\"\r\n                                value={this.state.Lower}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            Scope:\r\n                            <input\r\n                                id=\"Scope\"\r\n                                type=\"text\"\r\n                                name=\"Scope\"\r\n                                value={this.state.Scope}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <br />\r\n                        </label>\r\n                        <input type=\"submit\" value=\"Submit\" />\r\n                        <br/>\r\n                        Integral From Formula : {this.state.Actual_Answer}\r\n                        <br/>\r\n                        Exact Integral : {this.state.ExactAnswer}\r\n                        <br/>\r\n                        Error : {this.state.Error}\r\n                        <br/>\r\n                    </form>\r\n                );\r\n                return HTML;\r\n            }\r\n            if (this.state.ManualInput === false) {\r\n                HTML = [];\r\n                this.GetInputMatrix = false;\r\n                HTML.push(\r\n                    <div>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <select\r\n                                onChange={this.getEquationFromAPI}\r\n                                value={[this.state.equation, this.state.Upper, this.state.Lower, this.state.Scope]}\r\n                            >\r\n                                <option value=\"\">Choose Example Equation</option>\r\n                                {Data}\r\n                            </select>\r\n                            <input type=\"submit\" value=\"Submit\" />\r\n                            <br/>\r\n                            Integral From Formula : {this.state.Actual_Answer}\r\n                            <br/>\r\n                            Exact Integral : {this.state.ExactAnswer}\r\n                            <br/>\r\n                            Error : {this.state.Error}\r\n                            <br/>\r\n                        </form>\r\n                    </div>\r\n                );\r\n                return HTML;\r\n            }\r\n        }\r\n        else if(this.state.Chapter === \"Single_Trapezoidal_Rule\" || this.state.Chapter === \"Simpson_Rule\")\r\n        {\r\n            if (this.state.ManualInput === true) {\r\n                this.GetInputMatrix = true;\r\n                HTML.push(\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <label>\r\n                            equation\r\n                            <input\r\n                                id=\"equation\"\r\n                                type=\"text\"\r\n                                name=\"equation\"\r\n                                value={this.state.equation}\r\n                                onChange={this.handleChange}\r\n                            ></input>\r\n                            Upper:\r\n                            <input\r\n                                id=\"Upper\"\r\n                                type=\"number\"\r\n                                name=\"Upper\"\r\n                                value={this.state.Upper}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            Lower:\r\n                            <input\r\n                                id=\"Lower\"\r\n                                type=\"number\"\r\n                                name=\"Lower\"\r\n                                value={this.state.Lower}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <br />\r\n                        </label>\r\n                        <input type=\"submit\" value=\"Submit\" />\r\n                        <br/>\r\n                        Integral From Formula : {this.state.Actual_Answer}\r\n                        <br/>\r\n                        Exact Integral : {this.state.ExactAnswer}\r\n                        <br/>\r\n                        Error : {this.state.Error}\r\n                        <br/>\r\n                    </form>\r\n                );\r\n                return HTML;\r\n            }\r\n            if (this.state.ManualInput === false) {\r\n                HTML = [];\r\n                this.GetInputMatrix = false;\r\n                HTML.push(\r\n                    <div>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <select\r\n                                onChange={this.getEquationFromAPI}\r\n                                value={[this.state.equation, this.state.Upper, this.state.Lower]}\r\n                            >\r\n                                <option value=\"\">Choose Example Equation</option>\r\n                                {Data}\r\n                            </select>\r\n                            <input type=\"submit\" value=\"Submit\" />\r\n                            <br/>\r\n                            Integral From Formula : {this.state.Actual_Answer}\r\n                            <br/>\r\n                            Exact Integral : {this.state.ExactAnswer}\r\n                            <br/>\r\n                            Error : {this.state.Error}\r\n                            <br/>\r\n                        </form>\r\n                    </div>\r\n                );\r\n                return HTML;\r\n            }\r\n        }\r\n        else if(this.state.Chapter === \"Numerical_Differentiation\")\r\n        {\r\n            if (this.state.ManualInput === true) {\r\n                this.GetInputMatrix = true;\r\n                HTML.push(\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                    <label>\r\n                                        equation\r\n                                        <input\r\n                                            id=\"equation\"\r\n                                            type=\"text\"\r\n                                            name=\"equation\"\r\n                                            value={this.state.equation}\r\n                                            onChange={this.handleChange}\r\n                                        ></input>\r\n                                        X:\r\n                                        <input\r\n                                            id=\"X\"\r\n                                            type=\"number\"\r\n                                            name=\"X\"\r\n                                            value={this.state.X}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                        h:\r\n                                        <input\r\n                                            id=\"h\"\r\n                                            type=\"number\"\r\n                                            name=\"h\"\r\n                                            value={this.state.h}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    <br/>\r\n                                    Mode:\r\n                                    <select\r\n                                        onChange={this.handleChange}\r\n                                        name=\"ModeForDiff\"\r\n                                    >\r\n                                        <option value=\"\">Choose Mode</option>\r\n                                        <option value=\"Forward\">Forward</option>\r\n                                        <option value=\"Backward\">Backward</option>\r\n                                        <option value=\"Central\">Central</option>\r\n                                    </select>\r\n                                    Formula:\r\n                                    <select\r\n                                        onChange={this.handleChange}\r\n                                        name=\"FormulaForDiff\"\r\n                                    >\r\n                                        <option value=\"\">Choose Formula</option>\r\n                                        <option id=\"f^1(x)\" name=\"f^1(x)\" value=\"f^1*(x)\">f`(x)</option>\r\n                                        <option id=\"f^2*(x)\" name=\"f^2*(x)\" value=\"f^2*(x)\">f``(x)</option>\r\n                                        <option id=\"f^3*(x)\" name=\"f^3*(x)\" value=\"f^3*(x)\">f```(x)</option>\r\n                                        <option id=\"f^4*(x)\" name=\"f^4*(x)\" value=\"f^4*(x)\">f````(x)</option>\r\n                                    </select>\r\n                                    Choose Method:\r\n                                    <select\r\n                                        onChange={this.handleChange}\r\n                                        value={this.state.Order}\r\n                                        name=\"Order\"\r\n                                    >\r\n                                        <option value=\"\">Choose Formula</option>\r\n                                        <option id=\"First Divided-Differences\" \r\n                                                name=\"First Divided-Differences\" \r\n                                                value=\"First Divided-Differences\">\r\n                                                    First Divided-Differences\r\n                                        </option>\r\n                                        <option id=\"Second Divided-Differences\" \r\n                                                name=\"Second Divided-Differences\" \r\n                                                value=\"Second Divided-Differences\">\r\n                                                    Second Divided-Differences\r\n                                        </option>\r\n                                    </select>\r\n                                <br/>\r\n                                    </label>\r\n                                    <input type=\"submit\" value=\"Submit\" />\r\n                                    <br/>\r\n                                    <br/>\r\n                                    Eqution : {this.Convert_Latex(this.state.equation)}\r\n                                    <br/>\r\n                                    <br/>\r\n                                    h: {this.Convert_Latex(this.state.h)}\r\n                                    <br/>\r\n                                    <br/>\r\n                                    Formula: {this.Convert_Latex(this.state.FormulaForDiff)}\r\n                                    <br/>\r\n                                    <br/>\r\n                                    Mode: {this.Convert_Latex(this.state.ModeForDiff)}\r\n                                    <br/>\r\n                                    <br/>\r\n                                    Differentiation From Formula : {this.state.Actual_Answer}\r\n                                    <br/>\r\n                                    <br/>\r\n                                    Exact Differentiation : {this.state.ExactAnswer}\r\n                                    <br/>\r\n                                    <br/>\r\n                                    Error : {this.state.Error}\r\n                                    <br/>\r\n                                    <br/>\r\n                                </MathJax>\r\n                            </MathJaxContext>\r\n                    </form>\r\n                );\r\n                return HTML;\r\n            }\r\n            if (this.state.ManualInput === false) {\r\n                HTML = [];\r\n                this.GetInputMatrix = false;\r\n                HTML.push(\r\n                    <div>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                <select\r\n                                    onChange={this.getEquationFromAPI}\r\n                                    value={[this.state.equation, this.state.X, this.state.h]}\r\n                                >\r\n                                    <option value=\"\">Choose Example Equation</option>\r\n                                    {Data}\r\n                                </select>\r\n                                <br/>\r\n                                Mode:\r\n                                <select\r\n                                    onChange={this.handleChange}\r\n                                    name=\"ModeForDiff\"\r\n                                >\r\n                                    <option value=\"\">Choose Mode</option>\r\n                                    <option value=\"Forward\">Forward</option>\r\n                                    <option value=\"Backward\">Backward</option>\r\n                                    <option value=\"Central\">Central</option>\r\n                                </select>\r\n                                Formula:\r\n                                <select\r\n                                    onChange={this.handleChange}\r\n                                    name=\"FormulaForDiff\"\r\n                                >\r\n                                    <option value=\"\">Choose Formula</option>\r\n                                    <option id=\"f^1(x)\" name=\"f^1(x)\" value=\"f^1*(x)\">f`(x)</option>\r\n                                    <option id=\"f^2*(x)\" name=\"f^2*(x)\" value=\"f^2*(x)\">f``(x)</option>\r\n                                    <option id=\"f^3*(x)\" name=\"f^3*(x)\" value=\"f^3*(x)\">f```(x)</option>\r\n                                    <option id=\"f^4*(x)\" name=\"f^4*(x)\" value=\"f^4*(x)\">f````(x)</option>\r\n                                </select>\r\n                                Choose Method:\r\n                                <select\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.Order}\r\n                                    name=\"Order\"\r\n                                >\r\n                                    <option value=\"\">Choose Formula</option>\r\n                                    <option id=\"First Divided-Differences\" \r\n                                            name=\"First Divided-Differences\" \r\n                                            value=\"First Divided-Differences\">\r\n                                                First Divided-Differences\r\n                                    </option>\r\n                                    <option id=\"Second Divided-Differences\" \r\n                                            name=\"Second Divided-Differences\" \r\n                                            value=\"Second Divided-Differences\">\r\n                                                Second Divided-Differences\r\n                                    </option>\r\n                                </select>\r\n                                <br/>\r\n                                <input type=\"submit\" value=\"Submit\" />\r\n                                <br/>\r\n                                <br/>\r\n\r\n                                Eqution : {this.Convert_Latex(this.state.equation)}\r\n                                <br/>\r\n                                <br/>\r\n                                h: {this.Convert_Latex(this.state.h)}\r\n                                <br/>\r\n                                <br/>\r\n                                Formula: {this.Convert_Latex(this.state.FormulaForDiff)}\r\n                                <br/>\r\n                                <br/>\r\n                                Mode: {this.Convert_Latex(this.state.ModeForDiff)}\r\n                                <br/>\r\n                                <br/>\r\n                                Mode: {this.Convert_Latex(this.state.Order)}\r\n                                <br/>\r\n                                <br/>\r\n                                Differentiation From Formula : {this.state.Actual_Answer}\r\n                                <br/>\r\n                                <br/>\r\n                                Exact Differentiation : {this.state.ExactAnswer}\r\n                                <br/>\r\n                                <br/>\r\n                                Error : {this.state.Error}\r\n                                <br/>\r\n                                <br/>\r\n                                </MathJax>\r\n                            </MathJaxContext>\r\n                        </form>\r\n                    </div>\r\n                );\r\n                return HTML;\r\n            }\r\n        }\r\n    }\r\n\r\n    Input = () => {\r\n        var Data = [];\r\n        var GetData = 0;\r\n        this.Answer = 0;\r\n        if(this.state.HaveToken === true)\r\n        {\r\n            switch (this.state.Chapter) {\r\n                case \"Bisection\":\r\n                    for (\r\n                        let i = 0;\r\n                        i < (this.state.DataFromAPI[0].Bisection).length;\r\n                        i++\r\n                    ) {\r\n                        GetData = this.state.DataFromAPI[0].Bisection[i];\r\n                        Data.push(\r\n                            <option\r\n                                key={GetData.id}\r\n                                value={[\r\n                                    GetData.equation,\r\n                                    GetData.left,\r\n                                    GetData.right,\r\n                                ]}\r\n                            >\r\n                                {GetData.equation}\r\n                            </option>\r\n                        );\r\n                    }\r\n                    return (\r\n                        <div>\r\n                            <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                    <h2 >Bisection Method</h2>\r\n                                    <br/>\r\n                                </MathJax>\r\n                            </MathJaxContext>\r\n                            <select\r\n                                onChange={this.getEquationFromAPI}\r\n                                data-testid=\"BisectionAPI\"\r\n                                value={[\r\n                                    this.state.equation,\r\n                                    this.state.left,\r\n                                    this.state.right,\r\n                                ]}\r\n                            >\r\n                                <option value=\"\">Choose Example Equation</option>\r\n                                    {Data}\r\n                            </select>\r\n                            <br/>\r\n                            <br/>\r\n                            <form onSubmit={this.handleSubmit} data-testid=\"BisectionSubmit\">\r\n                                <label className=\"Input-Equation\">\r\n                                    <MathJaxContext>\r\n                                        <MathJax dynamic>\r\n                                        Equation:\r\n                                        <input \r\n                                            id=\"EQ_Bisection\"\r\n                                            type=\"text\"\r\n                                            name=\"equation\"\r\n                                            data-testid=\"BisectionEquation\"\r\n                                            value={this.state.equation}\r\n                                            onChange={this.handleChange}\r\n                                        ></input>\r\n                                        L:\r\n                                        <input \r\n                                            // className=\"Input\"\r\n                                            id=\"L_Bisection\"\r\n                                            type=\"text\"\r\n                                            name=\"left\"\r\n                                            data-testid=\"BisectionLeft\"\r\n                                            value={this.state.left}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                        R:\r\n                                        <input\r\n                                            // className=\"Input\"\r\n                                            id=\"R_Bisection\"\r\n                                            type=\"text\"\r\n                                            name=\"right\"\r\n                                            data-testid=\"BisectionRight\"\r\n                                            value={this.state.right}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                        <h3>\r\n                                            <br/>\r\n                                            Your Equation :{\" \"}\r\n                                            {this.Convert_Latex(\r\n                                                this.state.equation\r\n                                            )}{\" \"}\r\n                                            <br></br>\r\n                                            Left Boudary :{\" \"}\r\n                                            {this.Convert_Latex(\r\n                                                this.state.left\r\n                                            )}{\" \"}\r\n                                            <br></br>\r\n                                            Right Boundary :{\" \"}\r\n                                            {this.Convert_Latex(this.state.right)}\r\n                                        </h3>\r\n                                        <br/>\r\n                                            <input className=\"button\" type=\"submit\" value=\"Submit\" />\r\n                                        <hr/>\r\n                                        <h3>Answer : {this.state.Actual_Answer}</h3>\r\n                                        </MathJax>\r\n                                    </MathJaxContext>\r\n                                    {this.Create_Graph()}\r\n                                    </label>\r\n                                </form>\r\n                            {this.state.ProveAnswer}\r\n                        </div>\r\n                    );\r\n    \r\n                case \"False_Position\":\r\n                    for (\r\n                        let i = 0;\r\n                        i <\r\n                        parseInt(this.state.DataFromAPI[0].False_Position.length);\r\n                        i++\r\n                    ) {\r\n                        GetData = this.state.DataFromAPI[0].False_Position[i];\r\n                        Data.push(\r\n                            <option\r\n                                key={GetData.id}\r\n                                value={[\r\n                                    GetData.equation,\r\n                                    GetData.left,\r\n                                    GetData.right,\r\n                                ]}\r\n                            >\r\n                                {GetData.equation}\r\n                            </option>\r\n                        );\r\n                    }\r\n                \r\n                    return (\r\n                        <div>\r\n                            <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                    <h2>False Position Method</h2>\r\n                                    <br/>\r\n                                </MathJax>\r\n                            </MathJaxContext>\r\n                            <select\r\n                                onChange={this.getEquationFromAPI}\r\n                                value={[\r\n                                    this.state.equation,\r\n                                    this.state.left,\r\n                                    this.state.right,\r\n                                ]}\r\n                            >\r\n                                <option value=\"\">Choose Example Equation</option>\r\n                                {Data}\r\n                            </select>\r\n                            <br/>\r\n                            <br/>\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <label>\r\n                                    <MathJaxContext>\r\n                                        <MathJax dynamic>\r\n                                            Equation:{\"\"}\r\n                                            <input\r\n                                                id=\"EQ_False_Position\"\r\n                                                type=\"text\"\r\n                                                name=\"equation\"\r\n                                                value={this.state.equation}\r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                            L:{}\r\n                                            <input\r\n                                                id=\"L_False_Position\"\r\n                                                type=\"text\"\r\n                                                name=\"left\"\r\n                                                value={this.state.left}\r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                            R:{}\r\n                                            <input\r\n                                                id=\"R_False_Position\"\r\n                                                type=\"text\"\r\n                                                name=\"right\"\r\n                                                value={this.state.right}\r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                            <br/> \r\n                                            <h3>\r\n                                                <br/>\r\n                                                Your Equation :\r\n                                                {this.Convert_Latex(\r\n                                                    this.state.equation\r\n                                                )}\r\n                                                <br/> \r\n                                                Left Boudary :\r\n                                                {this.Convert_Latex(\r\n                                                    this.state.left\r\n                                                )}\r\n                                                <br/> \r\n                                                Right Boundary :\r\n                                                {this.Convert_Latex(this.state.right)}\r\n                                                <br/> \r\n                                            </h3>\r\n                                            <input type=\"submit\" value=\"Submit\" />\r\n                                        </MathJax>\r\n                                    </MathJaxContext>\r\n                                    <br/>\r\n                                    <hr/>\r\n                                    <h3>Answer : {this.state.Actual_Answer}</h3>\r\n                                    {this.Create_Graph()}\r\n                                </label>\r\n                            </form>\r\n                            {this.state.ProveAnswer}\r\n                        </div>\r\n                    );\r\n    \r\n                case \"One_Point_Iteration\":\r\n                    for (\r\n                        let i = 0;\r\n                        i <\r\n                        parseInt(\r\n                            this.state.DataFromAPI[0].One_Point_Iteration.length\r\n                        );\r\n                        i++\r\n                    ) {\r\n                        GetData = this.state.DataFromAPI[0].One_Point_Iteration[i];\r\n                        Data.push(\r\n                            <option\r\n                                key={GetData.id}\r\n                                value={[GetData.equation, GetData.X0]}\r\n                            >\r\n                                {GetData.equation}\r\n                            </option>\r\n                        );\r\n                    }\r\n                    \r\n                    return (\r\n                        <div>\r\n                            <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                    <h2>One Point Iteration</h2>\r\n                                    <br/>\r\n                                </MathJax>\r\n                            </MathJaxContext>\r\n                            <select\r\n                                onChange={this.getEquationFromAPI}\r\n                                value={[this.state.equation, this.state.X0]}\r\n                            >\r\n                                <option value=\"\">Choose Example Equation</option>\r\n                                {Data}\r\n                            </select>\r\n                            <br/>\r\n                            <br/>\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <label>\r\n                                    <MathJaxContext>\r\n                                        <MathJax dynamic>\r\n                                            Equation:\r\n                                            <input\r\n                                                id=\"EQ_One_Point\"\r\n                                                type=\"text\"\r\n                                                name=\"equation\"\r\n                                                value={this.state.equation}\r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                            X0:\r\n                                            <input\r\n                                                id=\"X_One_Point\"\r\n                                                type=\"text\"\r\n                                                name=\"X0\"\r\n                                                value={this.state.X0}\r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                        <h3>\r\n                                            <br/>\r\n                                            Your Equation :\r\n                                            {this.Convert_Latex(this.state.equation)}\r\n                                            <br/>\r\n                                            Inital X :\r\n                                            {this.Convert_Latex(this.state.X0)}    \r\n                                        </h3>\r\n                                        <br/>\r\n                                            <input className=\"button\" type=\"submit\" value=\"Submit\" />\r\n                                        <hr/>\r\n                                        <h3>Answer : {this.state.Actual_Answer}</h3>\r\n                                        </MathJax>\r\n                                    </MathJaxContext>\r\n                                    <div>{this.Create_Graph()}</div>\r\n                                </label>\r\n                            </form>\r\n                            {this.state.ProveAnswer}\r\n                        </div>\r\n                    );\r\n    \r\n                case \"Newton_Raphson\":\r\n                    for (\r\n                        let i = 0;\r\n                        i <\r\n                        parseInt(this.state.DataFromAPI[0].Newton_Raphson.length);\r\n                        i++\r\n                    ) {\r\n                        GetData = this.state.DataFromAPI[0].Newton_Raphson[i];\r\n                        Data.push(\r\n                            <option\r\n                                key={GetData.id}\r\n                                value={[GetData.equation, GetData.X0]}\r\n                            >\r\n                                {GetData.equation}\r\n                            </option>\r\n                        );\r\n                    }\r\n                   \r\n                    return (\r\n                        <div>\r\n                            <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                    <h2>Newton Raphson</h2>\r\n                                    <br/>\r\n                                </MathJax>\r\n                            </MathJaxContext>\r\n                            <select\r\n                                onChange={this.getEquationFromAPI}\r\n                                value={[this.state.equation, this.state.X0]}\r\n                            >\r\n                                <option value=\"\">Choose Example Equation</option>\r\n                                {Data}\r\n                            </select>\r\n                            <br/>\r\n                            <br/>\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <label>\r\n                                    <MathJaxContext>\r\n                                        <MathJax dynamic>\r\n                                            Equation:{\"\"}\r\n                                            <input\r\n                                                id=\"EQ_Newton\"\r\n                                                type=\"text\"\r\n                                                name=\"equation\"\r\n                                                value={this.state.equation}\r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                            X0:{}\r\n                                            <input\r\n                                                id=\"X0_Newton\"\r\n                                                type=\"text\"\r\n                                                name=\"X0\"\r\n                                                value={this.state.X0}\r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                            <h3>\r\n                                                <br/>\r\n                                                Your Equation :\r\n                                                {this.Convert_Latex(this.state.equation)};\r\n                                                <br/>\r\n                                                Inital X :\r\n                                                {this.Convert_Latex(this.state.X0)}\r\n                                            </h3>\r\n                                            <br/>\r\n                                                <input className=\"button\" type=\"submit\" value=\"Submit\" />\r\n                                            <hr/> \r\n                                            <h3>Answer : {this.state.Actual_Answer}</h3>\r\n                                        </MathJax>\r\n                                    </MathJaxContext>\r\n                                <div>{this.Create_Graph()}</div>\r\n                                </label>\r\n                            </form>\r\n                            {this.state.ProveAnswer}\r\n                        </div>\r\n                    );\r\n    \r\n                case \"Secant_Method\":\r\n                    for (\r\n                        let i = 0;\r\n                        i <\r\n                        parseInt(this.state.DataFromAPI[0].Secant_Method.length);\r\n                        i++\r\n                    ) {\r\n                        GetData = this.state.DataFromAPI[0].Secant_Method[i];\r\n                        Data.push(\r\n                            <option\r\n                                key={GetData.id}\r\n                                value={[GetData.equation, GetData.X0, GetData.X1]}\r\n                            >\r\n                                {GetData.equation}\r\n                            </option>\r\n                        );\r\n                    }\r\n                    return (\r\n                        <div>\r\n                            <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                    <h2>Secant Method</h2>\r\n                                    <br/>\r\n                                </MathJax>\r\n                            </MathJaxContext>\r\n                            <select\r\n                                onChange={this.getEquationFromAPI}\r\n                                value={[\r\n                                    this.state.equation,\r\n                                    this.state.X0,\r\n                                    this.state.X1,\r\n                                ]}\r\n                            >\r\n                                <option value=\"\">Choose Example Equation</option>\r\n                                {Data}\r\n                            </select>\r\n                            <br/>\r\n                            <br/>\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <label>\r\n                                    <MathJaxContext>\r\n                                        <MathJax dynamic>\r\n                                            Equation:{\"\"}\r\n                                            <input\r\n                                                id=\"EQ_Secant\"\r\n                                                type=\"text\"\r\n                                                name=\"equation\"\r\n                                                value={this.state.equation}\r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                            X0:{}\r\n                                            <input\r\n                                                id=\"X0_Secant\"\r\n                                                type=\"text\"\r\n                                                name=\"X0\"\r\n                                                value={this.state.X0}\r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                            X1:{}\r\n                                            <input\r\n                                                id=\"X1_Secant\"\r\n                                                type=\"text\"\r\n                                                name=\"X1\"\r\n                                                value={this.state.X1}\r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                            <h3>\r\n                                                <br/>\r\n                                                Your Equation :\r\n                                                {this.Convert_Latex(\r\n                                                    this.state.equation\r\n                                                )}{\" \"}\r\n                                                <br/>\r\n                                                Inital X0 :{\" \"}\r\n                                                {this.Convert_Latex(this.state.X0)}\r\n                                                <br/>\r\n                                                Inital X1 :{\" \"}\r\n                                                {this.Convert_Latex(this.state.X1)}\r\n                                            </h3>\r\n                                            <br/>\r\n                                                <input className=\"button\" type=\"submit\" value=\"Submit\" />\r\n                                            <hr/> \r\n                                        <h3>Answer : {this.state.Actual_Answer}</h3>\r\n                                        </MathJax>\r\n                                    </MathJaxContext>\r\n                                {this.Create_Graph()}\r\n                                </label>\r\n                            </form>\r\n                        </div>\r\n                    );\r\n    \r\n                case \"Cramer_Rule\":\r\n                    for (\r\n                        let i = 0;\r\n                        i < parseInt(this.state.DataFromAPI[0].Cramer_Rule.length);\r\n                        i++\r\n                    ) {\r\n                        GetData = this.state.DataFromAPI[0].Cramer_Rule[i];\r\n                        Data.push(\r\n                            <option\r\n                                key={GetData.id}\r\n                                value={[GetData.metrixA, GetData.metrixB]}\r\n                            >\r\n                                {GetData.id}\r\n                            </option>\r\n                        );\r\n                    }\r\n                    return (\r\n                        <div>\r\n                            <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                    <h2>Cramer's Rule</h2>\r\n                                    <br/>\r\n                                </MathJax>                    \r\n                            </MathJaxContext>\r\n                            <label>\r\n                                Manual Input : <input\r\n                                    type=\"checkbox\"\r\n                                    onChange={this.toggleSwitch}\r\n                                    name=\"ManualInput\"\r\n                                    value={this.state.ManualInput}\r\n                                />\r\n                            </label>\r\n                            <br />\r\n                            <br/>\r\n                            {this.ShowInputChapter2(Data)}\r\n                        </div>\r\n                    );\r\n    \r\n                case \"Gauss_Elimination\":\r\n                    for (\r\n                        let i = 0;\r\n                        i <\r\n                        parseInt(\r\n                            this.state.DataFromAPI[0].Gauss_Elimination.length\r\n                        );\r\n                        i++\r\n                    ) {\r\n                        GetData = this.state.DataFromAPI[0].Gauss_Elimination[i];\r\n                        Data.push(\r\n                            <option\r\n                                key={GetData.id}\r\n                                value={[GetData.metrixA, GetData.metrixB]}\r\n                            >\r\n                                {GetData.id}\r\n                            </option>\r\n                        );\r\n                    }\r\n                    return (\r\n                        <div>\r\n                            <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                    <h2>Gauss Elimination Method</h2>\r\n                                    <br/>\r\n                                </MathJax>\r\n                            </MathJaxContext>\r\n                            <label>\r\n                            Manual Input : <input\r\n                                    type=\"checkbox\"\r\n                                    onChange={this.toggleSwitch}\r\n                                    name=\"ManualInput\"\r\n                                    value={this.state.ManualInput}\r\n                                />\r\n                            </label>\r\n                            <br />\r\n                            <br/>\r\n                            {this.ShowInputChapter2(Data)}\r\n                        </div>\r\n                    );\r\n    \r\n                case \"Gauss_Jordan\":                \r\n                    for (\r\n                        let i = 0;\r\n                        i < parseInt(this.state.DataFromAPI[0].Gauss_Jordan.length);\r\n                        i++\r\n                    ) {\r\n                        GetData = this.state.DataFromAPI[0].Gauss_Jordan[i];\r\n                        Data.push(\r\n                            <option\r\n                                key={GetData.id}\r\n                                value={[GetData.metrixA, GetData.metrixB]}\r\n                            >\r\n                                {GetData.id}\r\n                            </option>\r\n                        );\r\n                    }          \r\n                    return (\r\n                        <div>\r\n                            <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                    <h2>Gauss Jordan</h2>\r\n                                    <br/>\r\n                                </MathJax>\r\n                            </MathJaxContext>\r\n                            <label>\r\n                                Manual Input : <input\r\n                                    type=\"checkbox\"\r\n                                    onChange={this.toggleSwitch}\r\n                                    name=\"ManualInput\"\r\n                                    value={this.state.ManualInput}\r\n                                />\r\n                            </label>\r\n                            <br />\r\n                            <br/>\r\n                            {this.ShowInputChapter2(Data)}\r\n                        </div>\r\n                    );\r\n    \r\n                case \"LU_Decompost\":\r\n                    for (\r\n                        let i = 0;\r\n                        i < parseInt(this.state.DataFromAPI[0].LU_Decompost.length);\r\n                        i++\r\n                    ) {\r\n                        GetData = this.state.DataFromAPI[0].LU_Decompost[i];\r\n                        Data.push(\r\n                            <option\r\n                                key={GetData.id}\r\n                                value={[GetData.metrixA, GetData.metrixB]}\r\n                            >\r\n                                {GetData.id}\r\n                            </option>\r\n                        );\r\n                    }\r\n                    return (\r\n                        <div>\r\n                            <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                    <h2>LU Decompost</h2>\r\n                                    <br/>\r\n                                </MathJax>\r\n                            </MathJaxContext>\r\n                            <label>\r\n                                Manual Input : <input\r\n                                    type=\"checkbox\"\r\n                                    onChange={this.toggleSwitch}\r\n                                    name=\"ManualInput\"\r\n                                    value={this.state.ManualInput}\r\n                                />\r\n                            </label>\r\n                            <br />\r\n                            <br/>\r\n                            {this.ShowInputChapter2(Data)}\r\n                        </div>\r\n                    );\r\n    \r\n                case \"Jacobi_Iteration\":\r\n                    for (\r\n                        let i = 0;\r\n                        i <\r\n                        parseInt(this.state.DataFromAPI[0].Jacobi_Iteration.length);\r\n                        i++\r\n                    ) {\r\n                        GetData = this.state.DataFromAPI[0].Jacobi_Iteration[i];\r\n                        Data.push(\r\n                            <option\r\n                                key={GetData.id}\r\n                                value={[\r\n                                    GetData.metrixA,\r\n                                    GetData.metrixB,\r\n                                    GetData.metrixX\r\n                                ]}\r\n                            >\r\n                                {GetData.id}\r\n                            </option>\r\n                        );\r\n                    }\r\n                    return (\r\n                        <div>\r\n                            <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                    <h2>Jacobi Iteration</h2>\r\n                                    <br/>\r\n                                </MathJax>\r\n                            </MathJaxContext>\r\n                            <label>\r\n                                Manual Input : <input\r\n                                    type=\"checkbox\"\r\n                                    onChange={this.toggleSwitch}\r\n                                    name=\"ManualInput\"\r\n                                    value={this.state.ManualInput}\r\n                                />\r\n                            </label>\r\n                            <br />\r\n                            <br/>\r\n                            {this.ShowInputChapter2(Data)}\r\n                        </div>\r\n                    );\r\n    \r\n                case \"Gauss_Seidel_Iteration\":\r\n                    for (\r\n                        let i = 0;\r\n                        i <\r\n                        parseInt(\r\n                            this.state.DataFromAPI[0].Gauss_Seidel_Iteration.length\r\n                        );\r\n                        i++\r\n                    ) {\r\n                        GetData =\r\n                            this.state.DataFromAPI[0].Gauss_Seidel_Iteration[i];\r\n                        Data.push(\r\n                            <option\r\n                                key={GetData.id}\r\n                                value={[\r\n                                    GetData.metrixA,\r\n                                    GetData.metrixB,\r\n                                    GetData.metrixX\r\n                                ]}\r\n                            >\r\n                                {GetData.id}\r\n                            </option>\r\n                        );\r\n                    }\r\n                    return (\r\n                        <div>\r\n                             <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                    <h2>Gauss Seidel Iteration</h2>\r\n                                    <br/>\r\n                                </MathJax>                    \r\n                            </MathJaxContext>\r\n                            <label>\r\n                                Manual Input : <input\r\n                                    type=\"checkbox\"\r\n                                    onChange={this.toggleSwitch}\r\n                                    name=\"ManualInput\"\r\n                                    value={this.state.ManualInput}\r\n                                />\r\n                            </label>\r\n                            <br />\r\n                            {this.ShowInputChapter2(Data)}\r\n                        </div>\r\n                    );\r\n    \r\n                case \"Conjugate_Gradient\":\r\n                    for (\r\n                        let i = 0;\r\n                        i <\r\n                        parseInt(\r\n                            this.state.DataFromAPI[0].Conjugate_Gradient.length\r\n                        );\r\n                        i++\r\n                    ) {\r\n                        GetData = this.state.DataFromAPI[0].Conjugate_Gradient[i];\r\n                        Data.push(\r\n                            <option\r\n                                key={GetData.id}\r\n                                value={[\r\n                                    GetData.metrixA,\r\n                                    GetData.metrixB,\r\n                                    GetData.metrixX\r\n                                ]}\r\n                            >\r\n                                {GetData.id}\r\n                            </option>\r\n                        );\r\n                    }\r\n                    return (\r\n                        <div>\r\n                            <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                    <h2>Conjugate Gradient</h2>\r\n                                    <br/>\r\n                                </MathJax>\r\n                            </MathJaxContext>\r\n                            <label>\r\n                                Manual Input : <input\r\n                                    type=\"checkbox\"\r\n                                    onChange={this.toggleSwitch}\r\n                                    name=\"ManualInput\"\r\n                                    value={this.state.ManualInput}\r\n                                />\r\n                            </label>\r\n                            <br />\r\n                            {this.ShowInputChapter2(Data)}\r\n                        </div>\r\n                    );\r\n    \r\n                case \"Newton's_divided-differences\":\r\n                    return (\r\n                        <div>\r\n                            <h1>Newton's divided-differences</h1>\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <label>\r\n                                    X :{\"\"}\r\n                                    <input\r\n                                        id=\"metA_Newtondivided\"\r\n                                        type=\"text\"\r\n                                        name=\"metA\"\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                    Y:{}\r\n                                    <input\r\n                                        id=\"metB_Newtondivided\"\r\n                                        type=\"text\"\r\n                                        name=\"metB\"\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                    Scope:{}\r\n                                    <input\r\n                                        id=\"metX_Newtondivided\"\r\n                                        type=\"text\"\r\n                                        name=\"metX\"\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                    X_:\r\n                                    {\r\n                                        <input\r\n                                            id=\"X_Newtondivided\"\r\n                                            type=\"text\"\r\n                                            name=\"X\"\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    }\r\n                                </label>\r\n                                <input type=\"submit\" value=\"Submit\" />\r\n                                <MathJaxContext>\r\n                                    <MathJax dynamic>\r\n                                        MatrixA :{\" \"}\r\n                                        {this.Convert_Latex(this.state.metA)}\r\n                                        <br></br>\r\n                                        MatrixB :{\" \"}\r\n                                        {this.Convert_Latex(this.state.metB)}\r\n                                    </MathJax>\r\n                                </MathJaxContext>\r\n                                <h1 id=\"Newton's divided-differences\" />{\" \"}\r\n                                {/* <div>{this.Create_Graph()}</div> */}\r\n                            </form>\r\n                        </div>\r\n                    );\r\n    \r\n                case \"Lagrange_Interpolation\":\r\n                    for (\r\n                        let i = 0;\r\n                        i < parseInt(this.state.DataFromAPI[0].Lagrange_Interpolation.length);\r\n                        i++\r\n                    ) {\r\n                        GetData = this.state.DataFromAPI[0].Lagrange_Interpolation[i];\r\n                        Data.push(\r\n                            <option\r\n                                key={GetData.id}\r\n                                value={[GetData.metrixX, GetData.metrixY, GetData.Scope, GetData.X]}\r\n                            >\r\n                                {GetData.id}\r\n                            </option>\r\n                        );\r\n                    }\r\n                    return (\r\n                        <div>\r\n                            <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                    <h2>Lagrange Interpolation</h2>\r\n                                </MathJax>\r\n                            </MathJaxContext>\r\n                            <label>\r\n                                Manual Input : <input\r\n                                    type=\"checkbox\"\r\n                                    onChange={this.toggleSwitch}\r\n                                    name=\"ManualInput\"\r\n                                    value={this.state.ManualInput}\r\n                                />\r\n                            </label>\r\n                            <br />\r\n                            {this.ShowInputChapter3(Data)}\r\n                        </div>\r\n                    );\r\n                \r\n                case \"Linear_Regression\":\r\n                    for (\r\n                        let i = 0;\r\n                        i < parseInt(this.state.DataFromAPI[0].Linear_Regression.length);\r\n                        i++\r\n                    ) {\r\n                        GetData = this.state.DataFromAPI[0].Linear_Regression[i];\r\n                        Data.push(\r\n                            <option\r\n                                key={GetData.id}\r\n                                value={[GetData.equation, GetData.metrixX, GetData.metrixY, GetData.X]}\r\n                            >\r\n                                {GetData.id}\r\n                            </option>\r\n                        );\r\n                    }\r\n                    return (\r\n                        <div>\r\n                            <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                    <h2>Linear Regression</h2>\r\n                                    <br/>\r\n                                </MathJax>\r\n                            </MathJaxContext>\r\n                            <label>\r\n                                Manual Input : <input\r\n                                    type=\"checkbox\"\r\n                                    onChange={this.toggleSwitch}\r\n                                    name=\"ManualInput\"\r\n                                    value={this.state.ManualInput}\r\n                                />\r\n                            </label>\r\n                            <br />\r\n                            {this.ShowInputChapter4(Data)}\r\n                        </div>\r\n                    );\r\n    \r\n                case \"Polynomial_Regression\":\r\n                    for (\r\n                        let i = 0;\r\n                        i < parseInt(this.state.DataFromAPI[0].Polynomial_Regression.length);\r\n                        i++\r\n                    ) {\r\n                        GetData = this.state.DataFromAPI[0].Polynomial_Regression[i];\r\n                        Data.push(\r\n                            <option\r\n                                key={GetData.id}\r\n                                value={[GetData.equation, GetData.metrixX, GetData.metrixY, GetData.X]}\r\n                            >\r\n                                {GetData.id}\r\n                            </option>\r\n                        );\r\n                    }\r\n                    return (\r\n                        <div>\r\n                            <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                    <h2>Polynomial Regression</h2>\r\n                                    <br/>\r\n                                </MathJax>\r\n                            </MathJaxContext>\r\n                            <label>\r\n                                Manual Input : <input\r\n                                    type=\"checkbox\"\r\n                                    onChange={this.toggleSwitch}\r\n                                    name=\"ManualInput\"\r\n                                    value={this.state.ManualInput}\r\n                                />\r\n                            </label>\r\n                            <br />\r\n                            {this.ShowInputChapter4(Data)}\r\n                        </div>\r\n                    );\r\n                \r\n                case \"Multiple_Linear_Regression\":\r\n                    for (\r\n                        let i = 0;\r\n                        i < parseInt(this.state.DataFromAPI[0].Multiple_Linear_Regression.length);\r\n                        i++\r\n                    ) {\r\n                        GetData = this.state.DataFromAPI[0].Multiple_Linear_Regression[i];\r\n                        Data.push(\r\n                            <option\r\n                                key={GetData.id}\r\n                                value={[GetData.equation, GetData.metrix1, GetData.metrix2, GetData.metrix3, \r\n                                        GetData.metrixY, GetData.X1, GetData.X2, GetData.X3]}\r\n                            >\r\n                                {GetData.id}\r\n                            </option>\r\n                        );\r\n                    }\r\n                    return (\r\n                        <div>\r\n                            <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                    <h2>Multiple Linear Regression</h2>\r\n                                    <br/>\r\n                                </MathJax>\r\n                            </MathJaxContext>\r\n                            <label>\r\n                                Manual Input : <input\r\n                                    type=\"checkbox\"\r\n                                    onChange={this.toggleSwitch}\r\n                                    name=\"ManualInput\"\r\n                                    value={this.state.ManualInput}\r\n                                />\r\n                            </label>\r\n                            <br />\r\n                            {this.ShowInputChapter4(Data)}\r\n                        </div>\r\n                    );    \r\n                \r\n                case \"Single_Trapezoidal_Rule\":\r\n                    for (\r\n                        let i = 0;\r\n                        i < parseInt(this.state.DataFromAPI[0].Single_Trapezoidal_Rule.length);\r\n                        i++\r\n                    ) {\r\n                        GetData = this.state.DataFromAPI[0].Single_Trapezoidal_Rule[i];\r\n                        Data.push(\r\n                            <option\r\n                                key={GetData.id}\r\n                                value={[GetData.equation, GetData.Upper, GetData.Lower]}\r\n                            >\r\n                                {GetData.id}\r\n                            </option>\r\n                        );\r\n                    }\r\n                    return (\r\n                        <div>\r\n                            <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                    <h2>Single Trapezoidal Rule</h2>\r\n                                    <br/>\r\n                                </MathJax>\r\n                            </MathJaxContext>\r\n                            <label>\r\n                                Manual Input : <input\r\n                                    type=\"checkbox\"\r\n                                    onChange={this.toggleSwitch}\r\n                                    name=\"ManualInput\"\r\n                                    value={this.state.ManualInput}\r\n                                />\r\n                            </label>\r\n                            <br />\r\n                            {this.ShowInputChapter5(Data)}\r\n                        </div>\r\n                    );     \r\n    \r\n                case \"Composite_Trapezoidal_Rule\":\r\n                    for (\r\n                        let i = 0;\r\n                        i < parseInt(this.state.DataFromAPI[0].Composite_Trapezoidal_Rule.length);\r\n                        i++\r\n                    ) {\r\n                        GetData = this.state.DataFromAPI[0].Composite_Trapezoidal_Rule[i];\r\n                        Data.push(\r\n                            <option\r\n                                key={GetData.id}\r\n                                value={[GetData.equation, GetData.Upper, GetData.Lower, GetData.Scope]}\r\n                            >\r\n                                {GetData.id}\r\n                            </option>\r\n                        );\r\n                    }\r\n                    return (\r\n                        <div>\r\n                            <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                    <h2>Composite Trapezoidal Rule</h2>\r\n                                    <br/>\r\n                                </MathJax>\r\n                            </MathJaxContext>\r\n                            <label>\r\n                                Manual Input : <input\r\n                                    type=\"checkbox\"\r\n                                    onChange={this.toggleSwitch}\r\n                                    name=\"ManualInput\"\r\n                                    value={this.state.ManualInput}\r\n                                />\r\n                            </label>\r\n                            <br />\r\n                            {this.ShowInputChapter5(Data)}\r\n                        </div>\r\n                    );  \r\n    \r\n                case \"Simpson_Rule\":\r\n                    for (\r\n                        let i = 0;\r\n                        i < parseInt(this.state.DataFromAPI[0].Simpson_Rule.length);\r\n                        i++\r\n                    ) {\r\n                        GetData = this.state.DataFromAPI[0].Simpson_Rule[i];\r\n                        Data.push(\r\n                            <option\r\n                                key={GetData.id}\r\n                                value={[GetData.equation, GetData.Upper, GetData.Lower]}\r\n                            >\r\n                                {GetData.id}\r\n                            </option>\r\n                        );\r\n                    }\r\n                    return (\r\n                        <div>\r\n                            <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                    <h2>Simpson's Rule</h2>\r\n                                    <br/>\r\n                                </MathJax>\r\n                            </MathJaxContext>\r\n                            <label>\r\n                                Manual Input : <input\r\n                                    type=\"checkbox\"\r\n                                    onChange={this.toggleSwitch}\r\n                                    name=\"ManualInput\"\r\n                                    value={this.state.ManualInput}\r\n                                />\r\n                            </label>\r\n                            <br />\r\n                            {this.ShowInputChapter5(Data)}\r\n                        </div>\r\n                    );  \r\n    \r\n                case \"Composite_Simpson_Rule\":\r\n                    for (\r\n                        let i = 0;\r\n                        i < parseInt(this.state.DataFromAPI[0].Composite_Simpson_Rule.length);\r\n                        i++\r\n                    ) {\r\n                        GetData = this.state.DataFromAPI[0].Composite_Simpson_Rule[i];\r\n                        Data.push(\r\n                            <option\r\n                                key={GetData.id}\r\n                                value={[GetData.equation, GetData.Upper, GetData.Lower, GetData.Scope]}\r\n                            >\r\n                                {GetData.id}\r\n                            </option>\r\n                        );\r\n                    }\r\n                    return (\r\n                        <div>\r\n                            <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                    <h2>Composite Simpson's Rule</h2>\r\n                                    <br/>\r\n                                </MathJax>\r\n                            </MathJaxContext>\r\n                            <label>\r\n                                Manual Input : <input\r\n                                    type=\"checkbox\"\r\n                                    onChange={this.toggleSwitch}\r\n                                    name=\"ManualInput\"\r\n                                    value={this.state.ManualInput}\r\n                                />\r\n                            </label>\r\n                            <br />\r\n                            {this.ShowInputChapter5(Data)}\r\n                        </div>\r\n                    );  \r\n                          \r\n                case \"Numerical_Differentiation\":\r\n                    for (\r\n                        let i = 0;\r\n                        i < parseInt(this.state.DataFromAPI[0].Numerical_Differentiation.length);\r\n                        i++\r\n                    ) {\r\n                        GetData = this.state.DataFromAPI[0].Numerical_Differentiation[i];\r\n                        Data.push(\r\n                            <option\r\n                                key={GetData.id}\r\n                                value={[GetData.equation, GetData.X, GetData.h]}\r\n                            >\r\n                                {GetData.id}\r\n                            </option>\r\n                        );\r\n                    }\r\n                    return (\r\n                        <div>\r\n                            <MathJaxContext>\r\n                                <MathJax dynamic>\r\n                                    <h2>Numerical Differentiation</h2>\r\n                                    <br/>\r\n                                </MathJax>\r\n                            </MathJaxContext>\r\n                            <label>\r\n                                Manual Input : <input\r\n                                    type=\"checkbox\"\r\n                                    onChange={this.toggleSwitch}\r\n                                    name=\"ManualInput\"\r\n                                    value={this.state.ManualInput}\r\n                                />\r\n                            </label>\r\n                            <br />\r\n                            {this.ShowInputChapter5(Data)}\r\n                        </div>\r\n                    );     \r\n    \r\n                default:\r\n                    return (\r\n                        <label>\r\n                            <h2 data-testid=\"AlreadyLogin\" value=\"AlreadyLogin\">Welcome To Website Numerical Method Calculator</h2>\r\n                            <hr/>\r\n                            <div>Authorize By Cheewathep Testongla</div>\r\n                        </label>\r\n                    );\r\n            }\r\n        }\r\n        else \r\n        {\r\n            this.DisplayPleaseLogin = [<h2 data-testid=\"PleaseLogin\" value=\"PleaseLogin\">Please Log in To used website</h2>]\r\n        }\r\n    };\r\n        \r\n    //*** Part Login & Logout & Post Data***//\r\n\r\n    // Check if User is Type Data in Login //\r\n    CheckLogin = (hash, Hash) => {\r\n        if(hash === Hash)\r\n        {\r\n            this.DisplayPleaseLogin = \"\";\r\n                this.setState({\r\n                    GetDataFirstTime: false,\r\n                    HTML: (<button id=\"Logout\" data-testid=\"Logout\" value=\"Logout\" onClick={this.Logout}>Logout</button>),\r\n                    HaveToken: true,\r\n                    Account: (<h3 id=\"LOGIN SUCCESS\" data-testid=\"LOGIN SUCCESS\" value={this.state.UserName} className=\"login\">{this.state.UserName}</h3>),\r\n                    Chapter: ''\r\n                });\r\n        }\r\n        else \r\n        {\r\n            alert('Please Log in Again');\r\n            this.setState({\r\n                HTML: (<form className='login' data-testid=\"Submit_Login\" onSubmit={this.GetToken}>\r\n                            <div>Username</div>\r\n                            <input className=\"Input-Login\" id=\"UserName\" type=\"text\" name=\"UserName\" onChange={this.handleChange}></input>\r\n                            <div>Password</div>\r\n                            <input className=\"Input-Login\" id=\"Password\" type=\"password\" name=\"Password\" onChange={this.handleChange}></input>\r\n                            <br></br>\r\n                            <input type=\"submit\" value=\"Submit\"/>\r\n                        </form>),\r\n                HaveToken: false,\r\n                GetDataFirstTime: false,\r\n                DataFromAPI : [],\r\n                Account: (<h3 id=\"Guest User\" data-testid=\"Guest User\" value=\"Guest User\" className=\"text\">Guest User</h3>),\r\n                Chapter: ''\r\n            })\r\n        }\r\n    } \r\n\r\n    // Get Data from Input: Username & Password and bcrypt Data\r\n    GetToken = (event) => {\r\n        this.setState({\r\n            HTML: []\r\n        });\r\n        var Token = \"$2a$04$eBZPddZ99411Y7ahj5sQYe\";\r\n        var GenHash = bcrypt.hash(document.getElementById(\"UserName\").value+\r\n                                document.getElementById(\"Password\").value, Token, (err, hash) => {\r\n            fetch('http://localhost:3001/User')\r\n            .then((resp) => (resp).json())\r\n            .then((GetAccount) => {\r\n                var EncryptData = bcrypt.hash(GetAccount[0].email+GetAccount[0].password, Token, (err, Hash) => {\r\n                    // Called Function CheckLogin to Check if encrypt Data & encrypt real Data is match\r\n                    this.CheckLogin(hash, Hash);\r\n                });\r\n            })\r\n        });  \r\n        event.preventDefault();\r\n    }\r\n\r\n    Logout = () => {\r\n        if(this.state.HaveToken === true)\r\n        {\r\n            this.setState({\r\n                HTML:   (<form onSubmit={this.GetToken}>\r\n                        <div>Username</div>\r\n                        <input className=\"Input-Login\" id=\"UserName\" type=\"text\" name=\"UserName\" onChange={this.handleChange}></input>\r\n                        <div>Password</div>\r\n                        <input className=\"Input-Login\" id=\"Password\" type=\"password\" name=\"Password\" onChange={this.handleChange}></input>\r\n                        <br></br>\r\n                        <input type=\"submit\" value=\"Submit\"/>\r\n                        </form>\r\n                        ),\r\n                HaveToken: false,\r\n                UserName: '',\r\n                Password: '',\r\n                DataFromAPI: [],\r\n                GetDataFirstTime: true,\r\n                Account: (<h3 value=\"Guest User\" className=\"login\">Guest User</h3>)\r\n            })\r\n        }\r\n    }\r\n\r\n    //*** Generate Components ***//\r\n    render = () => {\r\n        // Get Data from JSON Server        \r\n        if (this.state.GetDataFirstTime === true) {\r\n            let text = \"http://localhost:3001/Numerical_Method\";\r\n            fetch(text)\r\n                .then((resp) => resp.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        DataFromAPI : data,\r\n                        GetDataFirstTime: false,\r\n                    })\r\n            });\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"Super-Background\">\r\n                    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                        <div className=\"container-fluid\">\r\n                            <h5 className=\"navbar-brand\">Numerical Method</h5>\r\n                            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\"\r\n                                >\r\n                                <li className=\"nav-item dropdown\">\r\n                                <button className=\"btn btn-secondary dropdown-toggle\" data-testid=\"Root_Of_Equation\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    Root Of Equation\r\n                                </button>\r\n                                <ul value=\"Bisection\" className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                    <li \r\n                                        id='Bisection'\r\n                                        className=\"dropdown-item\"\r\n                                        name=\"Bisection\"\r\n                                        data-testid=\"Bisection\"\r\n                                        value=\"Bisection\"\r\n                                        onClick={this.CheckChapter}\r\n                                    >\r\n                                        Bisection\r\n                                    </li>\r\n                                    <li\r\n                                        id='False_Position'\r\n                                        className=\"dropdown-item\"\r\n                                        name=\"False_Position\"\r\n                                        data-testid=\"False_Position\"\r\n                                        value=\"False_Position\"\r\n                                        onClick={this.CheckChapter}\r\n                                    >\r\n                                        False Position Method\r\n                                    </li>\r\n                                    <li\r\n                                        id='One_Point_Iteration'\r\n                                        className=\"dropdown-item\"\r\n                                        name=\"One_Point_Iteration\"\r\n                                        data-testid=\"One_Point_Iteration\"\r\n                                        value=\"One_Point_Iteration\"\r\n                                        onClick={this.CheckChapter}\r\n                                    >\r\n                                        One Point Iteration\r\n                                    </li>\r\n\r\n                                    <li\r\n                                        id='Newton_Raphson'\r\n                                        className=\"dropdown-item\"\r\n                                        name=\"Newton_Raphson\"\r\n                                        data-testid=\"Newton_Raphson\"\r\n                                        value=\"Newton_Raphson\"\r\n                                        onClick={this.CheckChapter}\r\n                                    >\r\n                                        Newton Raphson\r\n                                    </li>\r\n\r\n                                    <li\r\n                                        id='Secant_Method'\r\n                                        className=\"dropdown-item\"\r\n                                        name=\"Secant_Method\"\r\n                                        data-testid=\"Secant_Method\"\r\n                                        value=\"Secant_Method\"\r\n                                        onClick={this.CheckChapter}\r\n                                    >\r\n                                        Secant Method\r\n                                    </li>\r\n                                </ul>\r\n                                </li>\r\n                            </ul>\r\n                            {/* Chapter 2 */}\r\n                            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                                <li className=\"nav-item dropdown\">\r\n                                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    Solution Of Linear Algebraic Equations\r\n                                </button>\r\n                                    <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                        <li \r\n                                            id='Cramer_Rule'\r\n                                            className=\"dropdown-item\"\r\n                                            name=\"BisectCramer_Ruleion\"\r\n                                            onClick={this.CheckChapter}\r\n                                        >\r\n                                            Cramer's Rule\r\n                                        </li>\r\n                                        <li\r\n                                            id='Gauss_Elimination'\r\n                                            className=\"dropdown-item\"\r\n                                            name=\"Gauss_Elimination\"\r\n                                            onClick={this.CheckChapter}\r\n                                        >\r\n                                            Gauss Elimination\r\n                                        </li>\r\n                                        <li\r\n                                            id='Gauss_Jordan'\r\n                                            className=\"dropdown-item\"\r\n                                            name=\"Gauss_Jordan\"\r\n                                            onClick={this.CheckChapter}\r\n                                        >\r\n                                            Gauss Jordan\r\n                                        </li>\r\n\r\n                                        <li\r\n                                            id='LU_Decompost'\r\n                                            className=\"dropdown-item\"\r\n                                            name=\"LU_Decompost\"\r\n                                            onClick={this.CheckChapter}\r\n                                        >\r\n                                            LU Decomposition Method\r\n                                        </li>\r\n\r\n                                        <li\r\n                                            id='Jacobi_Iteration'\r\n                                            className=\"dropdown-item\"\r\n                                            name=\"Jacobi_Iteration\"\r\n                                            onClick={this.CheckChapter}\r\n                                        >\r\n                                            Jacobi Iteration\r\n                                        </li>\r\n\r\n                                        <li\r\n                                            id='Gauss_Seidel_Iteration'\r\n                                            className=\"dropdown-item\"\r\n                                            name=\"Gauss_Seidel_Iteration\"\r\n                                            onClick={this.CheckChapter}\r\n                                        >\r\n                                            Gauss Seidel Iteration\r\n                                        </li>\r\n\r\n                                        <li\r\n                                            id='Conjugate_Gradient'\r\n                                            className=\"dropdown-item\"\r\n                                            name=\"Conjugate_Gradient\"\r\n                                            onClick={this.CheckChapter}\r\n                                        >\r\n                                            Conjugate Gradient Method\r\n                                        </li>\r\n                                    </ul>\r\n                                </li>\r\n                            </ul>\r\n                            {/* Chapter 3 */}\r\n                            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                                <li className=\"nav-item dropdown\">\r\n                                    <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                        Interpolation And Extrapolation\r\n                                    </button>\r\n                                    <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                        <li \r\n                                            id=\"Newton's_divided-differences\"\r\n                                            className=\"dropdown-item\"\r\n                                            name=\"Newton's_divided-differences\"\r\n                                            onClick={this.CheckChapter}\r\n                                        >\r\n                                            Newton's Divided Differences\r\n                                        </li>\r\n                                        <li\r\n                                            id='Lagrange_Interpolation'\r\n                                            className=\"dropdown-item\"\r\n                                            name=\"Lagrange_Interpolcation\"\r\n                                            onClick={this.CheckChapter}\r\n                                        >\r\n                                            Lagrange Interpolation\r\n                                        </li>\r\n                                        <li\r\n                                            id='Spline'\r\n                                            className=\"dropdown-item\"\r\n                                            name=\"Spline\"\r\n                                            onClick={this.CheckChapter}\r\n                                        >\r\n                                            Spline\r\n                                        </li>\r\n                                    </ul>\r\n                                </li>\r\n                            </ul>\r\n                            {/* Chapter 4 */}\r\n                            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                                <li className=\"nav-item dropdown\">\r\n                                    <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                        Least-Squares Regression\r\n                                    </button>\r\n                                    <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                        <li \r\n                                            id=\"Linear_Regression\"\r\n                                            className=\"dropdown-item\"\r\n                                            name=\"Linear_Regression\"\r\n                                            onClick={this.CheckChapter}\r\n                                        >\r\n                                            Linear Regression\r\n                                        </li>\r\n                                        <li\r\n                                            id='Polynomial_Regression'\r\n                                            className=\"dropdown-item\"\r\n                                            name=\"Polynomial_Regression\"\r\n                                            onClick={this.CheckChapter}\r\n                                        >\r\n                                            Polynomial Regression\r\n                                        </li>\r\n                                        <li\r\n                                            id='Multiple_Linear_Regression'\r\n                                            className=\"dropdown-item\"\r\n                                            name=\"Multiple_Linear_Regression\"\r\n                                            onClick={this.CheckChapter}\r\n                                        >\r\n                                            Multiple Linear Regression\r\n                                        </li>\r\n                                    </ul>\r\n                                </li>\r\n                            </ul>\r\n                            {/* Chapter 5 */}\r\n                            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                                <li className=\"nav-item dropdown\">\r\n                                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    Numerical Integration And Diffrentiation\r\n                                </button>\r\n                                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                    <li\r\n                                        id='Single_Trapezoidal_Rule'\r\n                                        className=\"dropdown-item\"\r\n                                        name=\"Single_Trapezoidal_Rule\"\r\n                                        onClick={this.CheckChapter}\r\n                                    >\r\n                                        Single Trapezoidal Rule\r\n                                    </li>\r\n\r\n                                    <li\r\n                                        id='Composite_Trapezoidal_Rule'\r\n                                        className=\"dropdown-item\"\r\n                                        name=\"Composite_Trapezoidal_Rule\"\r\n                                        onClick={this.CheckChapter}\r\n                                    >\r\n                                        Composite Trapezoidal Rule\r\n                                    </li>\r\n                                    <hr className=\"dropdown-divider\"></hr>\r\n                                    <li\r\n                                        id='Simpson_Rule'\r\n                                        className=\"dropdown-item\"\r\n                                        name=\"Simpson_Rule\"\r\n                                        onClick={this.CheckChapter}\r\n                                    >\r\n                                        Simpson's Rule\r\n                                    </li>\r\n\r\n                                    <li\r\n                                        id='Composite_Simpson_Rule'\r\n                                        className=\"dropdown-item\"\r\n                                        name=\"Composite_Simpson_Rule\"\r\n                                        onClick={this.CheckChapter}\r\n                                    >\r\n                                        Composite Simpson's Rule\r\n                                    </li>\r\n                                    <hr className=\"dropdown-divider\"></hr>\r\n                                    <li \r\n                                        id=\"Numerical_Differentiation\"\r\n                                        className=\"dropdown-item\"\r\n                                        name=\"Numerical_Differentiation\"\r\n                                        onClick={this.CheckChapter}\r\n                                    >\r\n                                        Numerical Differentiation\r\n                                    </li>\r\n                                </ul>\r\n                                </li>\r\n                            </ul>\r\n                            </div>\r\n                        </div>\r\n                    </nav>\r\n                    {this.state.Account}\r\n                    {this.state.HTML}\r\n                    <div className=\"Panel\">\r\n                        {this.Input()}\r\n                        <br/>\r\n                        <br/>\r\n                        {this.DisplayPleaseLogin}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Home;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Home from \"./Home\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Route, HashRouter as Router, Routes } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <Routes>\n                <Route className=\"body\" exact path=\"/\" element={<Home />} />\n            </Routes>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}